[{"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\index.js":"1","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\reportWebVitals.js":"2","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\App.js":"3","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Home.js":"4","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Signup.js":"5","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Login.js":"6","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\firebase.js":"7","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\auth.js":"8","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\signup.js":"9","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\login.js":"10","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\home.js":"11","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\main.js":"12","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\Header.js":"13","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\searchbox.js":"14","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\movielist.js":"15","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\carouselmovies.js":"16","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\header.js":"17","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\rating.js":"18","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\moviedetails.js":"19","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\recommendations.js":"20","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\settings.js":"21","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\watchlaterbutton.js":"22","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\watchlater.js":"23","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\genres.js":"24","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\preferenceelicitation.js":"25","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\homepage-header.js":"26","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\ratingcharts.js":"27","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\assets\\canvasjs.react.js":"28","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\assets\\canvasjs.min.js":"29","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\ratedmovies.js":"30","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\castmovies.js":"31","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\logout.js":"32","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\index.js":"33","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\App.js":"34","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\login.js":"35","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\watchlater.js":"36","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\signup.js":"37","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\recommendations.js":"38","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\moviedetails.js":"39","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\genres.js":"40","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\ratingcharts.js":"41","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\ratedmovies.js":"42","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\settings.js":"43","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\castmovies.js":"44","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\home.js":"45","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\main.js":"46","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\firebase.js":"47","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\auth.js":"48","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\header.js":"49","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\assets\\canvasjs.react.js":"50","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\homepage-header.js":"51","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\assets\\canvasjs.min.js":"52","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\forgotpassword.js":"53","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\friendspage.js":"54","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\footer.js":"55","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\searchbox.js":"56","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\movielist.js":"57","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\preferenceelicitation.js":"58","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\carouselmovies.js":"59","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\rating.js":"60","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\watchlaterbutton.js":"61","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\logout.js":"62"},{"size":227,"mtime":1612811075714,"results":"63","hashOfConfig":"64"},{"size":362,"mtime":499162500000,"results":"65","hashOfConfig":"64"},{"size":3083,"mtime":1616622869209,"results":"66","hashOfConfig":"64"},{"size":235,"mtime":1609871212371,"results":"67","hashOfConfig":"64"},{"size":1915,"mtime":1609871293581,"results":"68","hashOfConfig":"64"},{"size":1915,"mtime":1609871230471,"results":"69","hashOfConfig":"64"},{"size":479,"mtime":1615484290308,"results":"70","hashOfConfig":"64"},{"size":548,"mtime":1615484290316,"results":"71","hashOfConfig":"64"},{"size":2584,"mtime":1616623324795,"results":"72","hashOfConfig":"64"},{"size":2494,"mtime":1616544078718,"results":"73","hashOfConfig":"64"},{"size":362,"mtime":1616623368503,"results":"74","hashOfConfig":"64"},{"size":6153,"mtime":1616624753626,"results":"75","hashOfConfig":"64"},{"size":3426,"mtime":1611331195838,"results":"76","hashOfConfig":"64"},{"size":1415,"mtime":1615570657832,"results":"77","hashOfConfig":"64"},{"size":2339,"mtime":1616617256250,"results":"78","hashOfConfig":"64"},{"size":2472,"mtime":1616518472720,"results":"79","hashOfConfig":"64"},{"size":3845,"mtime":1616622869268,"results":"80","hashOfConfig":"64"},{"size":3014,"mtime":1616625540380,"results":"81","hashOfConfig":"64"},{"size":6779,"mtime":1616617767234,"results":"82","hashOfConfig":"64"},{"size":5231,"mtime":1616166330383,"results":"83","hashOfConfig":"64"},{"size":5048,"mtime":1616541186676,"results":"84","hashOfConfig":"64"},{"size":2289,"mtime":1615930234205,"results":"85","hashOfConfig":"64"},{"size":1922,"mtime":1616523767901,"results":"86","hashOfConfig":"64"},{"size":2933,"mtime":1616523767771,"results":"87","hashOfConfig":"64"},{"size":3096,"mtime":1616624169960,"results":"88","hashOfConfig":"64"},{"size":1258,"mtime":1616344444805,"results":"89","hashOfConfig":"64"},{"size":6887,"mtime":1616525652749,"results":"90","hashOfConfig":"64"},{"size":1699,"mtime":1616449102634,"results":"91","hashOfConfig":"64"},{"size":460099,"mtime":1616449015444,"results":"92","hashOfConfig":"64"},{"size":1850,"mtime":1616523767684,"results":"93","hashOfConfig":"64"},{"size":1711,"mtime":1616611756937,"results":"94","hashOfConfig":"64"},{"size":366,"mtime":1616623291076,"results":"95","hashOfConfig":"64"},{"size":282,"mtime":1619610188810,"results":"96","hashOfConfig":"97"},{"size":3715,"mtime":1619612330617,"results":"98","hashOfConfig":"97"},{"size":2956,"mtime":1619088341412,"results":"99","hashOfConfig":"97"},{"size":1941,"mtime":1619102546078,"results":"100","hashOfConfig":"97"},{"size":3040,"mtime":1619089457018,"results":"101","hashOfConfig":"97"},{"size":7316,"mtime":1619270946994,"results":"102","hashOfConfig":"97"},{"size":7961,"mtime":1619608912244,"results":"103","hashOfConfig":"97"},{"size":2450,"mtime":1619102545606,"results":"104","hashOfConfig":"97"},{"size":8469,"mtime":1619101429503,"results":"105","hashOfConfig":"97"},{"size":1935,"mtime":1619101429184,"results":"106","hashOfConfig":"97"},{"size":6958,"mtime":1619972026969,"results":"107","hashOfConfig":"97"},{"size":1477,"mtime":1619102546409,"results":"108","hashOfConfig":"97"},{"size":3522,"mtime":1619102541642,"results":"109","hashOfConfig":"97"},{"size":5849,"mtime":1619552635882,"results":"110","hashOfConfig":"97"},{"size":492,"mtime":1619090737480,"results":"111","hashOfConfig":"97"},{"size":1531,"mtime":1619093860603,"results":"112","hashOfConfig":"97"},{"size":3630,"mtime":1619090737715,"results":"113","hashOfConfig":"97"},{"size":1699,"mtime":1617446169837,"results":"114","hashOfConfig":"97"},{"size":1323,"mtime":1619608550659,"results":"115","hashOfConfig":"97"},{"size":460099,"mtime":1617446169836,"results":"116","hashOfConfig":"97"},{"size":2107,"mtime":1619087719154,"results":"117","hashOfConfig":"97"},{"size":7587,"mtime":1619609645459,"results":"118","hashOfConfig":"97"},{"size":726,"mtime":1619608550621,"results":"119","hashOfConfig":"97"},{"size":507,"mtime":1619090737342,"results":"120","hashOfConfig":"97"},{"size":2557,"mtime":1619090736836,"results":"121","hashOfConfig":"97"},{"size":3030,"mtime":1619090737279,"results":"122","hashOfConfig":"97"},{"size":2643,"mtime":1619964132513,"results":"123","hashOfConfig":"97"},{"size":3457,"mtime":1619879190907,"results":"124","hashOfConfig":"97"},{"size":2345,"mtime":1619090737802,"results":"125","hashOfConfig":"97"},{"size":407,"mtime":1619090737395,"results":"126","hashOfConfig":"97"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"18hmr6o",{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"146","usedDeprecatedRules":"129"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"129"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"129"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"129"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"129"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"129"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"129"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"129"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"208"},"4aeagg",{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"208"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"208"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"208"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"208"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"208"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"208"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"208"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"208"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"208"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"208"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"249","usedDeprecatedRules":"208"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"208"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"208"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"208"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\index.js",[],["282","283"],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\reportWebVitals.js",[],["284","285"],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\App.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Home.js",[],["286","287"],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Signup.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Login.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\firebase.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\auth.js",["288"],"import { auth } from './firebase';\r\nimport firebase from \"firebase\";\r\n\r\nexport function signup(email, password, dob, address) {\r\n  return auth().createUserWithEmailAndPassword(email, password).\r\n      then(function (user) {\r\n          firebase.firestore().collection('Users').doc(user.user.uid).set({email : email})\r\n          console.log(\"uuid: \" + user.user.uid)\r\n      } )\r\n}\r\n\r\nexport function signin(email, password) {\r\n  return auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return auth().signOut()\r\n}","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\signup.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\login.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\home.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\main.js",["289"],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\Header.js",["290"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../services/firebase';\r\nimport * as ReactBootstrap from 'react-bootstrap';\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n\r\n      <ReactBootstrap.Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <ReactBootstrap.Navbar.Brand href=\"/main\">Movie Recommender</ReactBootstrap.Navbar.Brand>\r\n        <ReactBootstrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <ReactBootstrap.Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <ReactBootstrap.Nav className=\"mr-auto\">\r\n            <ReactBootstrap.Nav.Link href=\"/main\">All Movies</ReactBootstrap.Nav.Link>\r\n            <ReactBootstrap.Nav.Link href=\"#pricing\">Recommended Movies</ReactBootstrap.Nav.Link>\r\n            <ReactBootstrap.NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <ReactBootstrap.NavDropdown.Item href=\"#action/3.1\">Action</ReactBootstrap.NavDropdown.Item>\r\n              <ReactBootstrap.NavDropdown.Item href=\"#action/3.2\">Another action</ReactBootstrap.NavDropdown.Item>\r\n              <ReactBootstrap.NavDropdown.Item href=\"#action/3.3\">Something</ReactBootstrap.NavDropdown.Item>\r\n              <ReactBootstrap.NavDropdown.Divider />\r\n              <ReactBootstrap.NavDropdown.Item href=\"#action/3.4\">Separated link</ReactBootstrap.NavDropdown.Item>\r\n            </ReactBootstrap.NavDropdown>\r\n          </ReactBootstrap.Nav>\r\n          <ReactBootstrap.Nav>\r\n            <div>\r\n              {auth().currentUser ?\r\n                  <div className=\"navbar-nav\">\r\n              <ReactBootstrap.Nav.Link href=\"/profile\">Profile</ReactBootstrap.Nav.Link>\r\n              <button className=\"btn btn-primary\" onClick={() => auth().signOut()}>Logout</button>\r\n                  </div>\r\n              :\r\n                  <div className=\"navbar-nav\">\r\n              <ReactBootstrap.Nav.Link href=\"/login\">Sign In</ReactBootstrap.Nav.Link>\r\n              <ReactBootstrap.Nav.Link href=\"/signup\">Sign Up</ReactBootstrap.Nav.Link>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </ReactBootstrap.Nav>\r\n        </ReactBootstrap.Navbar.Collapse>\r\n      </ReactBootstrap.Navbar>\r\n\r\n      {/*<nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">*/}\r\n      {/*  <Link className=\"navbar-brand\" to=\"/\">ABC</Link>*/}\r\n      {/*  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">*/}\r\n      {/*    <span className=\"navbar-toggler-icon\"/>*/}\r\n      {/*  </button>*/}\r\n      {/*  <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNavAltMarkup\">*/}\r\n      {/*    {auth().currentUser*/}\r\n      {/*      ? <div className=\"navbar-nav\">*/}\r\n      {/*        <Link className=\"nav-item nav-link\" to=\"/profile\">Profile</Link>*/}\r\n      {/*        <button className=\"btn btn-primary\" onClick={() => auth().signOut()}>Logout</button>*/}\r\n      {/*      </div>*/}\r\n      {/*      : <div className=\"navbar-nav\">*/}\r\n      {/*        <Link className=\"nav-item nav-link\" to=\"/login\" eventKey={2}>Sign In</Link>*/}\r\n      {/*        <Link className=\"nav-item nav-link\" to=\"/signup\" eventKey={2}>Sign Up</Link>*/}\r\n      {/*      </div>}*/}\r\n      {/*  </div>*/}\r\n      {/*</nav>*/}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;",["291","292"],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\searchbox.js",["293","294"],"import React from \"react\";\r\nimport {MDBCol, MDBIcon} from \"mdbreact\";\r\nimport styles from \"./../App.css\"\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n\r\n        // <MDBCol md=\"6\">\r\n        //     <form action=\"\" onSubmit={props.handleSubmit}>\r\n        //       <div className=\"active-pink-3 active-pink-4 mb-4\">\r\n        //         <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={props.handleChange} />\r\n        //       </div>\r\n        //     </form>\r\n        // </MDBCol>\r\n        <MDBCol md=\"6\" className=\"search_container\">\r\n            <form className=\"form-inline mt-4 mb-4\" action=\"\" onSubmit={props.handleSubmit}>\r\n                <input className=\"search_input\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={props.handleChange} />\r\n            </form>\r\n        </MDBCol>\r\n\r\n        // <div className=\"container\">\r\n        //     <div className=\"row\">\r\n        //         <section className=\"col s4 offset-s4\">\r\n        //             <form action=\"\" onSubmit={props.handleSubmit}>\r\n        //                 <div className=\"input field\">\r\n        //                     <input placeholder=\"Search Movie\" type=\"text\" onChange={props.handleChange}/>\r\n        //                 </div>\r\n        //             </form>\r\n        //         </section>\r\n        //     </div>\r\n        //\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\movielist.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\carouselmovies.js",["295","296"],"import React from \"react\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport {Button, Card, CardDeck, CardImg} from \"react-bootstrap\";\r\nimport styles from \"./../App.css\"\r\nimport Rating from \"./rating\";\r\nimport { Link } from 'react-router-dom';\r\nimport image from \"./../images/no-image-found.png\"\r\nimport WatchLaterButton from \"./watchlaterbutton\";\r\n\r\nconst breakPoints = [\r\n  { width: 1, itemsToShow: 1 },\r\n  { width: 550, itemsToShow: 3, itemsToScroll: 3 },\r\n  { width: 768, itemsToShow: 5 },\r\n  { width: 1200, itemsToShow: 7 }\r\n];\r\n\r\nconst breakPoints_forPreference = [\r\n  { width: 1200, itemsToShow: 1 }\r\n];\r\n\r\nconst CarouselMovies = (props) => {\r\n    return(\r\n        <div className = \"row\" style={{width:\"100%\",styles}}>\r\n            <Carousel breakPoints={breakPoints} isRTL={false} className=\"rec-carousel-item\">\r\n                    {props.movies.map((movie, index) => (\r\n                        <CardDeck className = \"movie-card\" style={{height:\"300px\"}}>\r\n                        <div className=\"div2\">\r\n                            <Card className=\"center\">\r\n                                {\r\n                                    movie.poster_path !== null ?\r\n\r\n                                    <CardImg className=\"image\" src={\"https://image.tmdb.org/t/p/w500/\"+movie.poster_path} alt='movie'/>\r\n                                    :\r\n                                    <CardImg className=\"image\" src={image} alt='movie'/>\r\n                                }\r\n                                <Card.Body className=\"details\">\r\n                                    <Card.Title className=\"ellipsis-title\">{movie.title}</Card.Title>\r\n                                    <Card.Subtitle style={{fontSize:12}} className=\"mb-2 text-muted\">{movie.release_date}</Card.Subtitle>\r\n                                    <Card.Text className=\"ellipsis\">{movie.overview}</Card.Text>\r\n                                    <Rating onChange={props.onChange} name = {movie.id} year={movie.release_date} />\r\n                                    <Link to={{pathname:'/movie_details/'+movie.id ,state:{movie:movie.id}}}>View Details</Link>\r\n                                    <WatchLaterButton movie={movie.id}/>\r\n                                </Card.Body>\r\n\r\n                            </Card>\r\n\r\n                        </div>\r\n                        </CardDeck>\r\n                    ))}\r\n\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CarouselMovies;","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\header.js",["297"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../services/firebase';\r\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport styles from \"./../App.css\"\r\nimport Logout from \"../pages/logout\";\r\n\r\nfunction Header() {\r\n    if(auth().currentUser) {\r\n        return (\r\n            <header style={styles}>\r\n                <Navbar collapseOnSelect className=\"header\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/main\" style={{\r\n                        color: \"white\",\r\n                        fontFamily: \"Marker Felt, fantasy\",\r\n                        fontSize: \"23px\"\r\n                    }}>MovieRec</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/main\">All Movies</Nav.Link>\r\n                            <Nav.Link href=\"/recommendations\">Recommended Movies</Nav.Link>\r\n                            <Nav.Link href=\"/watchlater\">Watch Later</Nav.Link>\r\n                            <Nav.Link href=\"/ratedmovies\">Rated Movies</Nav.Link>\r\n                            <NavDropdown title=\"Genres\" id=\"collasible-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"/genres#Action\">Action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Animation\">Animation</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Comedy\">Comedy</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Crime\">Crime</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Documentary\">Documentary</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Family\">Family</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#History\">History</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Horror\">Horror</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Mystery\">Mystery</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Romance\">Romance</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Science-Fiction\">Science Fiction</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Thriller\">Thriller</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown.Divider/>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <div>\r\n                                <div className=\"navbar-nav\">\r\n                                    <NavDropdown title=\"Profile\" id=\"collasible-nav-dropdown\">\r\n                                        <NavDropdown.Item href=\"/profile/settings\">Settings</NavDropdown.Item>\r\n                                        <NavDropdown.Item href=\"/profile/ratings\">Your Ratings Data</NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                    {/*<button className=\"btn btn-primary\" style={{backgroundColor:\"#2b6777\"}} onClick={() => auth().signOut()}>Logout</button>*/}\r\n                                                                        {/*<Nav.Link href=\"/login\" className=\"btn btn-primary\" style={{backgroundColor:\"#2b6777\",color:\"white\"}} onSelect={() => auth().signOut()}>Logout</Nav.Link>*/}\r\n                                    <Logout/>\r\n                                </div>\r\n                            </div>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\rating.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\moviedetails.js",["298","299"],"import React, {Component} from \"react\";\r\nimport Header from \"../components/header\";\r\nimport Rating from \"./rating\";\r\nimport styles from \"./../App.css\"\r\nimport CarouselMovies from \"./carouselmovies\";\r\nimport Parser from 'html-react-parser';\r\nimport {Link} from \"react-router-dom\";\r\nimport image from \"./../images/no-image-found.png\"\r\n\r\nexport default class MovieDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            movieInfo: [],\r\n            movieTrailer: '',\r\n            similarMovies:[],\r\n            movieID: props.location.state.movie,\r\n            cast:[]\r\n        }\r\n        this.apiKey = '0e4224cc4fec38376b7e3f8f073a68c6'\r\n    }\r\n\r\n    getMovieInformation() {\r\n        console.log(\"in get movie info\")\r\n        fetch('https://api.themoviedb.org/3/movie/' + this.state.movieID + '?api_key=' + this.apiKey + '&language=en-US')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                // console.log(data)\r\n                this.setState({isLoading: false, movieInfo: [response]})\r\n\r\n                // let movies = {movies:[...data.results]}\r\n                // return movies.movies;\r\n            })\r\n\r\n\r\n        fetch('https://api.themoviedb.org/3/movie/' + this.state.movieID + '/videos?api_key=' + this.apiKey + '&language=en-US')\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                let key = ''\r\n\r\n                let arr = [...data.results]\r\n                for (let i = 0; i < arr.length; i++) {\r\n\r\n                    if (arr[i].type === \"Trailer\") {\r\n                        key = arr[i].key\r\n                        break;\r\n                    }\r\n                }\r\n                this.setState({movieTrailer:\"https://www.youtube.com/embed/\"+key})\r\n\r\n            })\r\n\r\n        fetch('https://api.themoviedb.org/3/movie/'+this.state.movieID +'/similar?api_key=' + this.apiKey + '&language=en-US&page=1')\r\n            .then(data => data.json())\r\n            .then(data => {\r\n\r\n                this.setState({similarMovies:[...data.results]})\r\n\r\n            })\r\n    }\r\n\r\n    getBackgroundImage = (props) => {\r\n        return \"https://image.tmdb.org/t/p/w500/\" + props.name\r\n    }\r\n\r\n    getMovieGenres = (props) => {\r\n        let htmlResult = ''\r\n        console.log(\"in get movie Genres\")\r\n        for (let genre in props){\r\n            console.log(props[genre].name)\r\n            // htmlResult = htmlResult + \"<span className = 'tag'>\"+props[genre].name+\"</span>\"\r\n            // htmlResult = htmlResult + \"&lt;span className = 'tag'&gt;\"+props[genre].name+\"&lt;/span&gt;\"\r\n            htmlResult = htmlResult + \"<span class=\\\"tag\\\">\"+props[genre].name+\"</span>\"\r\n\r\n        }\r\n\r\n        //            htmlResult = htmlResult + \"&lt;span className = 'tag'&gt;\"+props[genre].name+\"&lt;/span&gt;\"\r\n        // document.getElementByClassName(\"demo\").innerHTML = htmlResult\r\n        console.log(htmlResult)\r\n        return (htmlResult)\r\n    }\r\n\r\n    async getCastDetails() {\r\n        let cast1 = \"\"\r\n        await fetch('https://api.themoviedb.org/3/movie/' + this.state.movieID + '/credits?api_key=' + this.apiKey + '&language=en-US')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response)\r\n\r\n                this.setState({cast: response.cast.slice(0,10)})\r\n            })\r\n\r\n        console.log(this.state.cast)\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        this.getMovieInformation()\r\n        this.getCastDetails()\r\n\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.location.state.movie !== prevProps.location.state.movie){\r\n            await this.setState({movieID: this.props.location.state.movie})\r\n            this.componentDidMount()\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <div style={{styles}}>\r\n                    {this.state.movieInfo.map((movie) => (\r\n                    <div className=\"container-movie-details\">\r\n                        <div className=\"hero\" style={{backgroundImage: \"url(https://image.tmdb.org/t/p/w500/\"+ movie.backdrop_path + \")\"}}>\r\n\r\n                            <div className=\"details1\">\r\n\r\n                                <div className=\"title1\">{movie.title}  <span>{movie.release_date}</span></div>\r\n\r\n                                <div className=\"title2\">{movie.tagline}</div>\r\n\r\n                                <Rating name = {movie.id} year={movie.release_date}/>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"description\">\r\n\r\n                            <div className=\"column1\" style={{marginTop:\"50px\"}}>\r\n                                {\r\n                                    movie.poster_path !== null ?\r\n                                        <img src={\"https://image.tmdb.org/t/p/w500/\"+movie.poster_path}\r\n                                             alt=\"cover\" className=\"cover\"/>\r\n                                             :\r\n                                        <img src={image} alt='cover' className=\"cover\"/>\r\n                                }\r\n\r\n                                 <div style={{maxWidth:\"200px\"}}>\r\n                                    {Parser(this.getMovieGenres(movie.genres))}\r\n                                 </div>\r\n                            </div>\r\n\r\n                            <div className=\"column2\">\r\n\r\n                                <p>{movie.overview}</p>\r\n                                <div>\r\n                                    <h3 style={{marginTop:2}}>Cast</h3>\r\n                                    {\r\n                                        this.state.cast.map((cast)=>(\r\n                                            <span style={{marginRight:10}}><Link to={{pathname:'/cast/'+cast.id ,state:{cast:cast.id,name:cast.name}}}>{cast.name}</Link></span>\r\n\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"column3\">\r\n\r\n                                <iframe width=\"420\" height=\"300\" src={this.state.movieTrailer}/>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div style={{marginTop:\"120px\"}}>\r\n                            <h1 className=\"heading\">Similar movies to {movie.title}</h1>\r\n                            <CarouselMovies style={{paddingTop:\"50px\"}} movies={this.state.similarMovies}/>\r\n                        </div>\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\recommendations.js",["300"],"import React, {Component} from \"react\";\r\nimport Header from \"../components/header\";\r\nimport MovieList from \"./movielist\";\r\nimport firebase from \"firebase\";\r\nimport {auth} from \"../services/firebase\";\r\n\r\nexport default class Recommendations extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            movies:[],\r\n            uuid : auth().currentUser.uid,\r\n            loading:true,\r\n            tmdbIds:[]\r\n        }\r\n        this.apiKey = '0e4224cc4fec38376b7e3f8f073a68c6'\r\n        this.docRef =firebase.firestore().collection(\"Users\")\r\n                .doc(this.state.uuid).collection(\"Ratings\")\r\n        // this.setTmdbIds()\r\n        // this.pickIds()\r\n\r\n    }\r\n\r\n    pickIds = (localtmdbIds) => {\r\n        console.log(\"PickIds\")\r\n        // if(this.state.tmdbIds.length < 10){\r\n        //     return this.state.tmdbIds\r\n        // }else if (this.state.tmdbIds.length > 10 && this.state.tmdbIds.length < 30 ){\r\n        //\r\n        //     return this.state.tmdbIds.slice(0, 10).map(function () {\r\n        //         return this.splice(Math.floor(Math.random() * this.state.tmdbIds.length), 1)[0];\r\n        //     }, this.state.tmdbIds.slice())\r\n        //\r\n        // }else{\r\n        //     return this.state.tmdbIds.slice(0, 20).map(function () {\r\n        //         return this.splice(Math.floor(Math.random() * this.state.tmdbIds.length), 1)[0];\r\n        //     }, this.state.tmdbIds.slice())\r\n        // }\r\n        if(localtmdbIds.length < 10){\r\n            return localtmdbIds\r\n        }else if (localtmdbIds.length > 10 && localtmdbIds.length < 30 ){\r\n\r\n            return localtmdbIds.slice(0, 10).map(function () {\r\n                return this.splice(Math.floor(Math.random() * localtmdbIds.length), 1)[0];\r\n            }, localtmdbIds.slice())\r\n\r\n        }else{\r\n            return localtmdbIds.slice(0, 20).map(function () {\r\n                return this.splice(Math.floor(Math.random() * localtmdbIds.length), 1)[0];\r\n            }, localtmdbIds.slice())\r\n        }\r\n\r\n    }\r\n\r\n    getRecommendations = (results) => {\r\n        // let results = this.pickIds()\r\n\r\n        console.log(\"getrecom\")\r\n        console.log(this.state.tmdbIds)\r\n        // let res = results\r\n        let variab = []\r\n        let bakendUrl = \"/backend\"\r\n        let backendAPIToken = \"Token \" + localStorage.getItem(\"token\")\r\n        console.log(backendAPIToken)\r\n\r\n        fetch(bakendUrl + \"/suggestions\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-Type': 'application/json',\r\n                'Authorization': backendAPIToken\r\n            },\r\n            //99861\r\n            body: JSON.stringify({'tmdbId':results,'isUpdate':\"false\"})\r\n        }).then(response => response.json())\r\n            .then(\r\n                json => {\r\n                    // console.log(results)\r\n                    this.setState(this.fetchSuggestions([...json.results]))\r\n                    console.log(...json.results)\r\n                    // console.log(\"ids: \"+this.state.tmdbIds)\r\n                }\r\n            )\r\n            .catch(err => console.error(err))\r\n\r\n    }\r\n\r\n    fetchSuggestions = (results) => {\r\n        console.log(\"results: \")\r\n        console.log(results)\r\n        let recommendations = [];\r\n        const pushes = [];\r\n        for (let item in results){\r\n            const url = 'https://api.themoviedb.org/3/movie/' + results[item].tmdbId + '?api_key=' + this.apiKey + '&language=en-US'\r\n            pushes.push(\r\n                fetch(url).then(response => response.json())\r\n                    .then(json =>\r\n\r\n                        recommendations.push(json)\r\n\r\n                    )\r\n                    .catch(err => console.error(err))\r\n            )\r\n\r\n        }\r\n\r\n        let newrecommendations = []\r\n        Promise.all(pushes).then(()=>{\r\n            for (let item in recommendations){\r\n                if (!(\"success\" in recommendations[item])){\r\n                    newrecommendations.push(recommendations[item])\r\n                }\r\n            }\r\n            this.setState({movies:newrecommendations})\r\n        })\r\n\r\n\r\n        this.setState({loading: false})\r\n    }\r\n    async componentWillMount() {\r\n        let localtmdbIds = []\r\n        await this.docRef.where('rating', \"==\", 5).get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                console.log(\"1\")\r\n                console.log(doc.data().name)\r\n                console.log(typeof doc.data().name)\r\n                localtmdbIds.push(doc.data().name)\r\n            })\r\n\r\n\r\n        })\r\n\r\n        await this.docRef.where('rating', \"==\", 4).get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                console.log(\"2\")\r\n                console.log(doc.data().name)\r\n                localtmdbIds.push(doc.data().name)\r\n            })\r\n\r\n\r\n        })\r\n\r\n        let results = this.pickIds(localtmdbIds)\r\n        this.getRecommendations(results)\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                {this.state.loading === true ? <h2>Generating your recommendations...</h2> :\r\n                    <MovieList movies={this.state.movies}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\settings.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\watchlaterbutton.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\watchlater.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\genres.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\preferenceelicitation.js",["301","302","303","304","305"],"import {Component} from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport styles from \"./../App.css\"\r\nimport firebase from \"firebase\";\r\nimport { auth } from \"../services/firebase\";\r\nimport {\r\n    Popover,\r\n    Tooltip,\r\n    Modal, Button\r\n} from 'react-bootstrap';\r\nimport CarouselMovies from \"./carouselmovies\";\r\n\r\nexport default class PreferenceElicitation extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this)\r\n        this.state = {\r\n            show: false,\r\n            movies:[],\r\n            tmdbIds:[19995,24428,671,105,259693,419430,250546,177677,297761,13804,10625,284053,496243,416477,597,353486,150540,9806,405774,374720,10528,862,27205,157336,475557,49018,771,8871,508,1581,454983,313369,1726,75656],\r\n            uuid : auth().currentUser.uid,\r\n            disabled:true\r\n        }\r\n        this.docRef =firebase.firestore().collection(\"Users\")\r\n                .doc(this.state.uuid).collection(\"Ratings\")\r\n        this.apiKey = '0e4224cc4fec38376b7e3f8f073a68c6'\r\n    }\r\n\r\n    getMovies = () => {\r\n        let movies = [];\r\n        const pushes = [];\r\n\r\n        let shuffled = this.state.tmdbIds\r\n          .map((a) => ({sort: Math.random(), value: a}))\r\n          .sort((a, b) => a.sort - b.sort)\r\n          .map((a) => a.value)\r\n\r\n        for (let item in shuffled){\r\n            console.log(item)\r\n            const url = 'https://api.themoviedb.org/3/movie/' + shuffled[item] + '?api_key=' + this.apiKey + '&language=en-US'\r\n            pushes.push(\r\n                fetch(url).then(response => response.json())\r\n                    .then(json =>\r\n\r\n                        movies.push(json)\r\n\r\n                    )\r\n                    .catch(err => console.error(err))\r\n            )\r\n\r\n        }\r\n\r\n        Promise.all(pushes).then(()=>{\r\n            this.setState({movies:movies})\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getMovies()\r\n    }\r\n\r\n    async onChange() {\r\n        console.log(\"In on change\")\r\n        let localRatings = []\r\n        let num = 0\r\n        await this.docRef.get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                localRatings.push(doc.data().rating)\r\n                if (doc.data().rating === 4 || doc.data().rating === 5) {\r\n                    num = num + 1\r\n                }\r\n            })\r\n        })\r\n\r\n        if(num > 2 ) {\r\n            await this.setState({disabled: false})\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"heading\">Rate a few of your favourite movies</h1>\r\n                <CarouselMovies movies={this.state.movies} pref={true} onChange={this.onChange}/>\r\n                <Button style={{align:\"center\"}} disabled={this.state.disabled} onClick={this.props.refreshPage}>End Ratings</Button>\r\n                <p className=\"text-info\" style={{alignContent:\"center\", border:\"black\", marginTop:10, fontSize:18}}>We need you to rate a few movies before we can start generating recommendations for you.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\homepage-header.js",["306"],"import React from 'react';\r\nimport { auth } from '../services/firebase';\r\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport styles from \"./../App.css\"\r\n\r\nfunction HomePageHeader() {\r\n  return (\r\n    <header style={styles}>\r\n      <Navbar collapseOnSelect  className=\"header\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/main\" style={{color:\"white\",fontFamily:\"Marker Felt, fantasy\", fontSize:\"23px\"}}>MovieRec</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav>\r\n            <div>\r\n              {auth().currentUser ?\r\n                  <div className=\"navbar-nav\">\r\n                    <Nav.Link href=\"/profile\">Profile</Nav.Link>\r\n                    <button className=\"btn btn-primary\" onClick={() => auth().signOut()}>Logout</button>\r\n                  </div>\r\n                  :\r\n                  <div className=\"navbar-nav\">\r\n                    <Nav.Link href=\"/login\">Sign In</Nav.Link>\r\n                    <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default HomePageHeader;","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\ratingcharts.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\assets\\canvasjs.react.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\assets\\canvasjs.min.js",[],["307","308"],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\ratedmovies.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\castmovies.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\logout.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\index.js",["309"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from \"./App\";\r\nimport Footer from \"./components/footer\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\n\r\n",["310","311"],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\App.js",["312"],"import React, { Component } from 'react';\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Home from './pages/home';\r\nimport Main from './pages/main';\r\nimport Signup from './pages/signup';\r\nimport ForgotPassword from './pages/forgotpassword';\r\nimport Login from './pages/login';\r\nimport { auth } from './services/firebase';\r\nimport MovieDetails from \"./pages/moviedetails\";\r\nimport Recommendations from \"./pages/recommendations\";\r\nimport WatchLater from \"./pages/watchlater\";\r\nimport Genres from \"./pages/genres\";\r\nimport Settings from \"./pages/settings\";\r\nimport RatingCharts from \"./pages/ratingcharts\";\r\nimport MoviesRated from \"./pages/ratedmovies\";\r\nimport CastMovies from \"./pages/castmovies\";\r\nimport FriendsPage from \"./pages/friendspage\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Footer from \"./components/footer\";\r\n\r\nfunction PrivateRoute({ component: Component, authenticated, ...rest}) {\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => authenticated === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\r\n    />\r\n  )\r\n}\r\n\r\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => authenticated === false\r\n        ? <Component {...props} />\r\n        : <Redirect to='/main' />}\r\n    />\r\n  )\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      authenticated: false,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({\r\n          authenticated: true,\r\n          loading: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          authenticated: false,\r\n          loading: false,\r\n        });\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return this.state.loading === true ? <h2>Loading...</h2> : (\r\n        <div>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home}/>\r\n              <PublicRoute path=\"/signup\" authenticated={this.state.authenticated} component={Signup}/>\r\n              <PublicRoute path=\"/login\" authenticated={this.state.authenticated} component={Login}/>\r\n              <PublicRoute path=\"/forgotpassword\" authenticated={this.state.authenticated} component={ForgotPassword}/>\r\n              <PrivateRoute path=\"/main\" authenticated={this.state.authenticated} component={Main}/>\r\n              <PrivateRoute path=\"/profile/settings\" authenticated={this.state.authenticated} component={Settings}/>\r\n              <PrivateRoute path=\"/profile/friends\" authenticated={this.state.authenticated} component={FriendsPage}/>\r\n              <PrivateRoute path=\"/profile/ratings\" authenticated={this.state.authenticated} component={RatingCharts}/>\r\n              <PrivateRoute path=\"/movie_details\" authenticated={this.state.authenticated} component={MovieDetails}/>\r\n              <PrivateRoute path=\"/cast\" authenticated={this.state.authenticated} component={CastMovies}/>\r\n              <PrivateRoute path=\"/recommendations\" authenticated={this.state.authenticated} component={Recommendations}/>\r\n              <PrivateRoute path=\"/watchlater\" authenticated={this.state.authenticated} component={WatchLater}/>\r\n              <PrivateRoute path=\"/ratedmovies\" authenticated={this.state.authenticated} component={MoviesRated}/>\r\n              <PrivateRoute path=\"/genres\" authenticated={this.state.authenticated} component={Genres}/>\r\n            </Switch>\r\n          </Router>\r\n          <Footer/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\login.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\watchlater.js",["313"],"import {Component} from \"react\";\r\nimport MovieList from \"../components/movielist\";\r\nimport firebase from \"firebase\";\r\nimport Header from \"../components/header\";\r\nimport {auth} from \"../services/firebase\";\r\nimport Footer from \"../components/footer\";\r\n\r\n// Displays movies saved by the user\r\nexport default class WatchLater extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            tmdbIds: [],\r\n            movies: [],\r\n            uuid:auth().currentUser.uid\r\n        }\r\n        this.docRef =firebase.firestore().collection(\"Users\")\r\n                .doc(this.state.uuid).collection(\"WatchLater\")\r\n        this.apiKey = process.env.REACT_APP_TMDB_API_KEY\r\n    }\r\n\r\n    getWatchLaterMovies = (tmdbIds) => {\r\n        let movies = [];\r\n        const pushes = [];\r\n        for (let item in tmdbIds){\r\n            const url = 'https://api.themoviedb.org/3/movie/' + tmdbIds[item] + '?api_key=' + this.apiKey + '&language=en-US'\r\n            pushes.push(\r\n                fetch(url).then(response => response.json())\r\n                    .then(json =>\r\n\r\n                        movies.push(json)\r\n\r\n                    )\r\n                    .catch(err => console.error(err))\r\n            )\r\n\r\n        }\r\n\r\n        Promise.all(pushes).then(()=>{\r\n            this.setState({movies:movies})\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let localtmdbIds = []\r\n        await this.docRef.get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                localtmdbIds.push(doc.data().name)\r\n            })\r\n        })\r\n        this.setState({tmdbIds: localtmdbIds})\r\n        this.getWatchLaterMovies(localtmdbIds)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <h1 className=\"heading\">Watch Later</h1>\r\n                <MovieList movies={this.state.movies} isWatchLater={true}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\signup.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\recommendations.js",["314"],"import React, {Component} from \"react\";\r\nimport Header from \"../components/header\";\r\nimport MovieList from \"../components/movielist\";\r\nimport firebase from \"firebase\";\r\nimport {auth} from \"../services/firebase\";\r\nimport {DropdownButton, Dropdown} from \"react-bootstrap\";\r\nimport Footer from \"../components/footer\";\r\n\r\n// Produces recommendations\r\nexport default class Recommendations extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.onClick = this.onClick.bind(this)\r\n        this.state = {\r\n            movies:[],\r\n            uuid : auth().currentUser.uid,\r\n            email : auth().currentUser.email,\r\n            loading:true,\r\n            tmdbIds:[],\r\n            friends:[],\r\n            name:\"yours\",\r\n            allIds:[]\r\n        }\r\n        this.apiKey = process.env.REACT_APP_TMDB_API_KEY\r\n        this.docRefUsers =firebase.firestore().collection(\"Users\")\r\n        this.docRefuuid = this.docRefUsers.doc(this.state.uuid)\r\n        this.docRef = this.docRefuuid.collection(\"Ratings\")\r\n    }\r\n\r\n    // Picks a certain number of TMDB Ids randomly\r\n    pickIds = (localtmdbIds) => {\r\n        if(localtmdbIds.length < 10){\r\n            return localtmdbIds\r\n        }else if (localtmdbIds.length > 10 && localtmdbIds.length < 30 ){\r\n\r\n            return localtmdbIds.slice(0, 10).map(function () {\r\n                return this.splice(Math.floor(Math.random() * localtmdbIds.length), 1)[0];\r\n            }, localtmdbIds.slice())\r\n\r\n        }else{\r\n            return localtmdbIds.slice(0, 20).map(function () {\r\n                return this.splice(Math.floor(Math.random() * localtmdbIds.length), 1)[0];\r\n            }, localtmdbIds.slice())\r\n        }\r\n\r\n    }\r\n\r\n    // Calls the backend to generate recommendations\r\n    getRecommendations = (results) => {\r\n        let bakendUrl = \"/backend\"\r\n        let backendAPIToken = \"Token \" + localStorage.getItem(\"token\")\r\n        fetch(bakendUrl + \"/suggestions\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-Type': 'application/json',\r\n                'Authorization': backendAPIToken\r\n            },\r\n            body: JSON.stringify({'tmdbId':results,'allIds':this.state.allIds,'isUpdate':\"false\"})\r\n        }).then(response => response.json())\r\n            .then(\r\n                json => {\r\n                    this.setState(this.fetchSuggestions([...json.results]))\r\n                }\r\n            )\r\n            .catch(err => console.error(err))\r\n\r\n    }\r\n\r\n    // Uses the API to get the movie information of the list of movies generated from backend\r\n    fetchSuggestions = async (results) => {\r\n        let recommendations = [];\r\n        const pushes = [];\r\n        for (let item in results) {\r\n            const url = 'https://api.themoviedb.org/3/movie/' + results[item].tmdbId + '?api_key=' + this.apiKey + '&language=en-US'\r\n            pushes.push(\r\n                fetch(url).then(response => response.json())\r\n                    .then(json =>\r\n\r\n                        recommendations.push(json)\r\n                    )\r\n                    .catch(err => console.error(err))\r\n            )\r\n\r\n        }\r\n\r\n        let newrecommendations = []\r\n        Promise.all(pushes).then(() => {\r\n            for (let item in recommendations) {\r\n                if (!(\"success\" in recommendations[item])) {\r\n                    newrecommendations.push(recommendations[item])\r\n                }\r\n            }\r\n            this.setState({movies: newrecommendations})\r\n        })\r\n\r\n\r\n        await this.setState({loading: false})\r\n    }\r\n\r\n    async componentWillMount() {\r\n        let localtmdbIds = []\r\n        let allIds = []\r\n        let arr = []\r\n\r\n\r\n        // Gets all movies that the user has rated 4 or 5 out of 5\r\n        for (let i = 0; i <=5; i++){\r\n            await this.docRef.where('rating', \"==\", i).get().then(snapshot => {\r\n                snapshot.forEach(doc => {\r\n                    if (i === 4 || i === 5){\r\n                        localtmdbIds.push(doc.data().name)\r\n                    }\r\n                    allIds.push(doc.data().name)\r\n                })\r\n\r\n            })\r\n        }\r\n        this.setState({allIds:allIds})\r\n\r\n        arr.push({email:\"yours\",ids:localtmdbIds})\r\n\r\n        // Gets the friends to\r\n        let localFriendsEmails = [\"yours\"]\r\n\t\tawait this.docRefuuid.collection(\"Friends\").get().then(snapshot => {\r\n\t\t\tsnapshot.forEach(doc =>{\r\n\t\t\t    if (doc.data().accepted){\r\n\t\t\t        localFriendsEmails.push(doc.data().email)\r\n                }\r\n\t\t\t})\r\n\r\n\r\n\t\t})\r\n\r\n        await this.setState({friends:localFriendsEmails})\r\n\r\n        // Gets the tmdb Ids rated by the friend 4 or 5 out of 5\r\n        for (let i = 1; i < localFriendsEmails.length; i++){\r\n            let ids =[]\r\n            let id = \"\"\r\n\r\n            await this.docRefUsers.where('email','==', localFriendsEmails[i]).get().then(snapshot =>{\r\n                snapshot.forEach(function(doc) {\r\n                    id = doc.id\r\n\r\n                })\r\n            })\r\n\r\n            await this.docRefUsers.doc(id).collection(\"Ratings\").where('rating', \"==\", 5).get().then(snapshot => {\r\n\r\n                    snapshot.forEach(doc => {\r\n                        ids.push(doc.data().name)\r\n                    })\r\n            })\r\n\r\n            await this.docRefUsers.doc(id).collection(\"Ratings\").where('rating', \"==\", 4).get().then(snapshot => {\r\n\r\n                    snapshot.forEach(doc => {\r\n                        ids.push(doc.data().name)\r\n                    })\r\n            })\r\n\r\n            let arr1 = {email:localFriendsEmails[i], ids:ids}\r\n            arr.push(arr1)\r\n        }\r\n        await this.setState({tmdbIds:arr})\r\n        await this.setState()\r\n\r\n        let results = this.pickIds(localtmdbIds)\r\n        this.getRecommendations(results)\r\n    }\r\n\r\n    // Depending on which email the user clicked on, it displays their recommendations\r\n    async onClick(user) {\r\n\r\n        await this.setState({loading: true, name:user})\r\n        for (let i = 0; i < this.state.tmdbIds.length; i++) {\r\n\r\n            if (this.state.tmdbIds[i].email === user) {\r\n                let results = this.pickIds(this.state.tmdbIds[i].ids)\r\n                this.getRecommendations(results)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.loading === true){\r\n            return(\r\n                <div>\r\n                    <Header/>\r\n                     <h2>Generating your recommendations...</h2>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div>\r\n                    <Header/>\r\n                    <h1 className=\"heading\">{this.state.name===\"yours\"?\"Your\":this.state.name} Recommendations</h1>\r\n                    <div>\r\n                        <DropdownButton id=\"dropdown-basic-button\" title=\"Recommendations\" onSelect={this.onClick}>\r\n                            {\r\n                                this.state.friends.map((user)=>(\r\n                                    <Dropdown.Item eventKey={user}>{user===\"yours\"?\"Yours\":user}</Dropdown.Item>\r\n                                ))\r\n                            }\r\n                        </DropdownButton>\r\n                        <MovieList movies={this.state.movies}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n}","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\moviedetails.js",["315","316"],"import React, {Component} from \"react\";\r\nimport Header from \"../components/header\";\r\nimport Rating from \"../components/rating\";\r\nimport styles from \"./../App.css\"\r\nimport CarouselMovies from \"../components/carouselmovies\";\r\nimport Parser from 'html-react-parser';\r\nimport {Link} from \"react-router-dom\";\r\nimport image from \"./../images/no-image-found.png\"\r\nimport Footer from \"../components/footer\";\r\n\r\n// A page with details of a chosen movie\r\nexport default class MovieDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            movieInfo: [],\r\n            movieTrailer: '',\r\n            similarMovies:[],\r\n            movieID: props.location.state.movie,\r\n            cast:[],\r\n            providers:[],\r\n            providerUrl: \"\"\r\n        }\r\n\r\n        this.apiKey = process.env.REACT_APP_TMDB_API_KEY\r\n        console.log(this.state.movieID)\r\n    }\r\n\r\n\r\n    // Gets the required information about the movie to be displayed\r\n    getMovieInformation() {\r\n        fetch('https://api.themoviedb.org/3/movie/' + this.state.movieID + '?api_key=' + this.apiKey + '&language=en-US')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                this.setState({isLoading: false, movieInfo: [response]})\r\n            }\r\n            )\r\n\r\n\r\n        fetch('https://api.themoviedb.org/3/movie/' + this.state.movieID + '/videos?api_key=' + this.apiKey + '&language=en-US')\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                let key = ''\r\n\r\n                let arr = [...data.results]\r\n                for (let i = 0; i < arr.length; i++) {\r\n\r\n                    if (arr[i].type === \"Trailer\") {\r\n                        key = arr[i].key\r\n                        break;\r\n                    }\r\n                }\r\n                this.setState({movieTrailer:\"https://www.youtube.com/embed/\"+key})\r\n\r\n            })\r\n\r\n        fetch('https://api.themoviedb.org/3/movie/'+this.state.movieID +'/similar?api_key=' + this.apiKey + '&language=en-US&page=1')\r\n            .then(data => data.json())\r\n            .then(data => {\r\n\r\n                this.setState({similarMovies:[...data.results]})\r\n\r\n            })\r\n    }\r\n\r\n    getBackgroundImage = (props) => {\r\n        return \"https://image.tmdb.org/t/p/w500/\" + props.name\r\n    }\r\n\r\n    getMovieGenres = (props) => {\r\n        let htmlResult = ''\r\n        for (let genre in props){\r\n            htmlResult = htmlResult + \"\" +\r\n                \"<span class=\\\"tag\\\">\" +\r\n                \"<a style=\\\"color:white;\\\" href='/genres#\" + props[genre].name +\r\n                \"'>\"+props[genre].name+\"</a>\"+\"</span>\"\r\n\r\n        }\r\n\r\n        return (htmlResult)\r\n    }\r\n\r\n    async getCastDetails() {\r\n        await fetch('https://api.themoviedb.org/3/movie/' + this.state.movieID + '/credits?api_key=' + this.apiKey + '&language=en-US')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n\r\n                this.setState({cast: response.cast.slice(0,10)})\r\n            })\r\n\r\n\r\n    }\r\n\r\n    // Gets a list of where the movie can be found\r\n    async getMovieProviders(){\r\n        await fetch('https://api.themoviedb.org/3/movie/' + this.state.movieID + '/watch/providers?api_key=' + this.apiKey)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if(response.results.GB.flatrate){\r\n                    this.setState({providers: response.results.GB.flatrate, providerUrl:response.results.GB.link})\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getMovieInformation()\r\n        this.getCastDetails()\r\n        this.getMovieProviders()\r\n\r\n    }\r\n\r\n    // If an another movie is clicked on, it updates it with that movie information\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.location.state.movie !== prevProps.location.state.movie){\r\n            await this.setState({movieID: this.props.location.state.movie})\r\n            this.componentDidMount()\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <div style={{styles}}>\r\n                    {this.state.movieInfo.map((movie) => (\r\n                    <div className=\"container-movie-details\">\r\n                        <div className=\"hero\" style={{backgroundImage: \"url(https://image.tmdb.org/t/p/w500/\"+ movie.backdrop_path + \")\"}}>\r\n\r\n                            <div className=\"details1\">\r\n\r\n                                <div className=\"title1\">{movie.title}  <span>{movie.release_date}</span></div>\r\n\r\n                                <div className=\"title2\">{movie.tagline}</div>\r\n\r\n                                <Rating name = {movie.id} year={movie.release_date}  genres={movie.genres} />\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"description\">\r\n\r\n                            <div className=\"column1\" style={{marginTop:\"50px\"}}>\r\n                                {\r\n                                    movie.poster_path !== null ?\r\n                                        <img src={\"https://image.tmdb.org/t/p/w500/\"+movie.poster_path}\r\n                                             alt=\"cover\" className=\"cover\"/>\r\n                                             :\r\n                                        <img src={image} alt='cover' className=\"cover\"/>\r\n                                }\r\n                                <p style={{fontSize:\"15px\", color:\"blue\", float:\"left\"}}>Average rating: {(Math.round(movie.vote_average * 10) / 10)/2}/5</p>\r\n\r\n                                 <div style={{maxWidth:\"200px\"}}>\r\n                                    {Parser(this.getMovieGenres(movie.genres))}\r\n                                 </div>\r\n                                {\r\n                                    this.state.providers.length !== 0 ? <p style={{float:\"left\", color:\"red\"}}>Streaming Providers: </p>:null\r\n                                }\r\n                                {\r\n                                    this.state.providers.map((provider)=>(\r\n                                        <a href={this.state.providerUrl}>\r\n                                            <img src={\"https://image.tmdb.org/t/p/w500/\"+provider.logo_path}\r\n                                                alt=\"provider\" className=\"provider\"/>\r\n                                        </a>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"column2\">\r\n\r\n                                <p>{movie.overview}</p>\r\n                                <div>\r\n                                    <h3 style={{marginTop:2}}>Cast</h3>\r\n                                    {\r\n                                        this.state.cast.map((cast)=>(\r\n                                            <span style={{marginRight:10}}><Link to={{pathname:'/cast/'+cast.id ,state:{cast:cast.id,name:cast.name}}}>{cast.name}</Link></span>\r\n\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"column3\">\r\n\r\n                                <iframe width=\"420\" height=\"300\" src={this.state.movieTrailer}/>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div style={{marginTop:\"120px\"}}>\r\n                            <h1 className=\"heading\">Similar movies to {movie.title}</h1>\r\n                            <CarouselMovies style={{paddingTop:\"50px\"}} movies={this.state.similarMovies}/>\r\n                        </div>\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\genres.js",["317"],"import {Component} from \"react\";\r\nimport Header from \"../components/header\";\r\nimport MovieList from \"../components/movielist\";\r\nimport Footer from \"../components/footer\";\r\n\r\n// Displays movies according to genres\r\nexport default class Genres extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            genres:[{\"id\":28,\"name\":\"Action\"},{\"id\":16,\"name\":\"Animation\"},{\"id\":35,\"name\":\"Comedy\"},{\"id\":80,\"name\":\"Crime\"},{\"id\":99,\"name\":\"Documentary\"},{\"id\":10751,\"name\":\"Family\"},{\"id\":36,\"name\":\"History\"},{\"id\":27,\"name\":\"Horror\"},{\"id\":9648,\"name\":\"Mystery\"},{\"id\":10749,\"name\":\"Romance\"},{\"id\":878,\"name\":\"Science-Fiction\"},{\"id\":53,\"name\":\"Thriller\"}],\r\n            genreChosen: props.location.hash,\r\n            genreChosenId:0,\r\n            movies: [],\r\n            loading:true\r\n        }\r\n        this.apiKey = process.env.REACT_APP_TMDB_API_KEY\r\n\r\n    }\r\n\r\n    // Get movies based on a certain genre\r\n    fetchMovies() {\r\n        fetch('https://api.themoviedb.org/3/discover/movie?api_key=' + this.apiKey + '&with_genres=' + this.state.genreChosenId + '&language=en-US&page=1')\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                this.setState({movies: [...data.results],loading:false})\r\n            })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let genre = this.state.genreChosen.split('#')[1]\r\n        let id = 0\r\n        this.state.genres.forEach(function (d) {\r\n            if (d.name === genre) {\r\n                id = d.id\r\n                return\r\n            }\r\n        })\r\n        await this.setState({genreChosenId: id})\r\n        this.fetchMovies()\r\n    }\r\n\r\n    // Component should update when the location changed\r\n    // which means another genre has been chosen\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.location.hash !== prevProps.location.hash){\r\n            await this.setState({genreChosen: this.props.location.hash})\r\n            this.componentDidMount()\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <h1 className=\"heading\">{this.state.genreChosen.split('#')[1]} movies</h1>\r\n                {\r\n                    this.state.loading === true?\r\n                        <h2>Loading Movies...</h2>:\r\n                        <MovieList movies={this.state.movies}/>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\ratingcharts.js",["318"],"import React, {Component} from \"react\";\r\nimport {auth} from \"../services/firebase\";\r\nimport firebase from \"firebase\";\r\nimport moment from \"moment\";\r\nimport CanvasJSReact from '../assets/canvasjs.react';\r\nimport Header from \"../components/header\";\r\nimport Footer from \"../components/footer\";\r\nlet CanvasJS = CanvasJSReact.CanvasJS;\r\n\r\n// Displays charts for user\r\nexport default class RatingCharts extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            uuid: auth().currentUser.uid,\r\n            optionsRatingsPerDay: {\r\n                title: {},\r\n                axisX: {},\r\n                axisY: {},\r\n                data: []\r\n            },\r\n            optionsRatingsFrequency: {\r\n                title: {},\r\n                axisX: {},\r\n                axisY: {},\r\n                data: []\r\n            },\r\n            optionsRatingsReleaseYear: {\r\n                title: {},\r\n                axisX: {},\r\n                axisY: {},\r\n                data: []\r\n            },\r\n            optionsRatingsGenres: {\r\n                title: {},\r\n                axisX: {},\r\n                axisY: {},\r\n                data: []\r\n            }\r\n        }\r\n\r\n        this.docRef = firebase.firestore().collection(\"Users\")\r\n            .doc(this.state.uuid).collection(\"Ratings\")\r\n\r\n    }\r\n\r\n    // Line graph with ratings per day\r\n    async ratingsPerDay() {\r\n        let dictOfYears = {}\r\n        await this.docRef.get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                let date = doc.data().date\r\n                if (date in dictOfYears) {\r\n                    dictOfYears[date] = dictOfYears[date] + 1\r\n                } else {\r\n                    dictOfYears[date] = 1\r\n                }\r\n            })\r\n        })\r\n\r\n        let ordDict = {}\r\n        Object.keys(dictOfYears).sort(function (a, b) {\r\n            return moment(b, 'YYYY-MM-DD').toDate() - moment(a, 'YYYY-MM-DD').toDate();\r\n        }).forEach(function (key) {\r\n            ordDict[key] = dictOfYears[key];\r\n        })\r\n\r\n        let dataPoints = []\r\n        for (let i in ordDict) {\r\n            let date =  new Date(i.substring(0, 4), i.substring(5, 7) - 1, i.substring(8))\r\n            dataPoints.push({x:date, y: ordDict[i]})\r\n        }\r\n\r\n        let optionsLocal = {\r\n            animationEnabled: true,\r\n            title: {\r\n                text: \"Your ratings per day\"\r\n            },\r\n            axisY: {\r\n                title: \"Number of Ratings\"\r\n            },\r\n            axisX: {\r\n                title: \"Day of Year\",\r\n                valueFormatString: \"DD-MM\",\r\n            },\r\n            data: [{\r\n                type: \"line\",\r\n                toolTipContent: \"Date {x}: {y} Ratings\",\r\n                dataPoints: dataPoints\r\n            }]\r\n        }\r\n\r\n        await this.setState({optionsRatingsPerDay: optionsLocal})\r\n    }\r\n\r\n    // Bar graph with number of movies of each rating 5,4,3,2,1\r\n    async ratingsFrequency() {\r\n        let numof5 = 0\r\n        let numof4 = 0\r\n        let numof3 = 0\r\n        let numof2 = 0\r\n        let numof1 = 0\r\n        await this.docRef.get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                if (doc.data().rating === 5) {\r\n                    numof5 = numof5 + 1\r\n                } else if (doc.data().rating === 4) {\r\n                    numof4 = numof4 + 1\r\n                } else if (doc.data().rating === 3) {\r\n                    numof3 = numof3 + 1\r\n                } else if (doc.data().rating === 2) {\r\n                    numof2 = numof2 + 1\r\n                } else if (doc.data().rating === 1) {\r\n                    numof1 = numof1 + 1\r\n                }\r\n            })\r\n        })\r\n\r\n        let optionsLocal = {\r\n            title: {\r\n                text: \"Distribution of your ratings\"\r\n            },\r\n            axisX: {\r\n                title: \"Rating\"\r\n            },\r\n            axisY: {\r\n                title: \"Frequency\",\r\n                interval: 1\r\n            },\r\n            data: [\r\n                {\r\n                    type: \"column\",\r\n                    dataPoints: [\r\n                        {label: \"1\", y: numof1},\r\n                        {label: \"2\", y: numof2},\r\n                        {label: \"3\", y: numof3},\r\n                        {label: \"4\", y: numof4},\r\n                        {label: \"5\", y: numof5}\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n        await this.setState({optionsRatingsFrequency: optionsLocal})\r\n    }\r\n\r\n    // Pie chart with percentage of each genre rated\r\n    async ratingsGenres() {\r\n        let dictOfGenres = {}\r\n        await this.docRef.get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                let genres = doc.data().genres\r\n                for (let i in genres){\r\n                    let genre = genres[i]\r\n                    if (genre in dictOfGenres) {\r\n                        dictOfGenres[genre] = dictOfGenres[genre] + 1\r\n                    } else {\r\n                        dictOfGenres[genre] = 1\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        let dataPoints = []\r\n        let total = 0\r\n        for (let i in dictOfGenres) {\r\n            total = total + dictOfGenres[i]\r\n        }\r\n\r\n        for (let i in dictOfGenres) {\r\n            dataPoints.push({label: i, y: dictOfGenres[i]/total})\r\n        }\r\n\r\n\r\n        let optionsLocal = {\r\n            title: {\r\n                text: \"Distribution of your ratings with genres\"\r\n            },\r\n            data: [\r\n                {\r\n                    type: \"pie\",\r\n                    indexLabel: \"#percent%\",\r\n                    dataPoints: dataPoints\r\n\r\n                }\r\n            ]\r\n        }\r\n        await this.setState({optionsRatingsGenres: optionsLocal})\r\n    }\r\n\r\n    // Bar graph with number of movies in each year\r\n    async ratingsReleaseYear(){\r\n        let dictOfYears = {}\r\n        await this.docRef.get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                let releaseYear = doc.data().release.substring(0, 4)\r\n                if (releaseYear in dictOfYears) {\r\n                    dictOfYears[releaseYear] = dictOfYears[releaseYear] + 1\r\n                } else {\r\n                    dictOfYears[releaseYear] = 1\r\n                }\r\n            })\r\n        })\r\n\r\n        let dataPoints = []\r\n        for (let i in dictOfYears) {\r\n            dataPoints.push({label: i, y: dictOfYears[i]})\r\n        }\r\n\r\n\r\n        let optionsLocal = {\r\n            title: {\r\n                text: \"Distribution of your ratings with release years\"\r\n            },\r\n            axisY: {\r\n                title: \"Number of Ratings\"\r\n            },\r\n            axisX: {\r\n                title: \"Release Year\",\r\n                valueFormatString: \"YYYY\"\r\n            },\r\n            data: [\r\n                {\r\n                    type: \"column\",\r\n                    dataPoints: dataPoints\r\n\r\n                }\r\n            ]\r\n        }\r\n        await this.setState({optionsRatingsReleaseYear: optionsLocal})\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        await this.ratingsPerDay()\r\n        await this.ratingsFrequency()\r\n        await this.ratingsReleaseYear()\r\n        await this.ratingsGenres()\r\n\r\n        let chart = new CanvasJS.Chart(\"chartContainer1\", this.state.optionsRatingsReleaseYear);\r\n        chart.render();\r\n\r\n        let chart1 = new CanvasJS.Chart(\"chartContainer2\", this.state.optionsRatingsFrequency);\r\n        chart1.render();\r\n\r\n        let chart2 = new CanvasJS.Chart(\"chartContainer3\", this.state.optionsRatingsPerDay);\r\n        chart2.render();\r\n\r\n        let chart3 = new CanvasJS.Chart(\"chartContainer4\", this.state.optionsRatingsGenres);\r\n        chart3.render();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <h1 className=\"heading\"> Your rating data</h1>\r\n                <div id=\"chartContainer1\" style={{width: \"45%\",height: \"300px\",display: \"inline-block\", float:\"left\"}}/>\r\n                <div id=\"chartContainer2\" style={{width: \"45%\",height: \"300px\",display: \"inline-block\", float:\"right\"}}/><br/>\r\n                <div id=\"chartContainer4\" style={{width: \"50%\",height: \"300px\",display: \"inline-block\", float:\"left\"}}/><br/>\r\n                <div id=\"chartContainer3\" style={{width: \"100%\",height: \"300px\",display: \"inline-block\"}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\ratedmovies.js",["319"],"import {Component} from \"react\";\r\nimport Header from \"../components/header\";\r\nimport firebase from \"firebase\";\r\nimport {auth} from \"../services/firebase\";\r\nimport MovieList from \"../components/movielist\";\r\nimport Footer from \"../components/footer\";\r\n\r\n// Displays a list of the movies already rated by the user\r\nexport default class MoviesRated extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            uuid: auth().currentUser.uid,\r\n            tmdbIds:[],\r\n            movies:[]\r\n        }\r\n        this.docRef = firebase.firestore().collection(\"Users\")\r\n            .doc(this.state.uuid).collection(\"Ratings\")\r\n        this.apiKey = process.env.REACT_APP_TMDB_API_KEY\r\n    }\r\n\r\n    getRatedMovies = (tmdbIds) => {\r\n        let movies = [];\r\n        const pushes = [];\r\n        for (let item in tmdbIds){\r\n            const url = 'https://api.themoviedb.org/3/movie/' + tmdbIds[item] + '?api_key=' + this.apiKey + '&language=en-US'\r\n            pushes.push(\r\n                fetch(url).then(response => response.json())\r\n                    .then(json =>\r\n\r\n                        movies.push(json)\r\n\r\n                    )\r\n                    .catch(err => console.error(err))\r\n            )\r\n\r\n        }\r\n\r\n        Promise.all(pushes).then(()=>{\r\n            this.setState({movies:movies})\r\n        })\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        let localtmdbIds = []\r\n        await this.docRef.get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                localtmdbIds.push(doc.data().name)\r\n            })\r\n        })\r\n        this.setState({tmdbIds: localtmdbIds})\r\n        this.getRatedMovies(localtmdbIds)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <h1 className=\"heading\">Movies You've Rated</h1>\r\n                <MovieList movies={this.state.movies}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\settings.js",["320"],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\castmovies.js",["321"],"import {Component} from \"react\";\r\nimport Header from \"../components/header\";\r\nimport MovieList from \"../components/movielist\";\r\nimport Footer from \"../components/footer\";\r\n\r\n// Displays movies based on an actor/actress\r\nexport default class CastMovies extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            castId:props.location.state.cast,\r\n            castName:props.location.state.name,\r\n            movies:[],\r\n            loading:true\r\n        }\r\n        console.log(this.state.castName)\r\n        this.apiKey = process.env.REACT_APP_TMDB_API_KEY\r\n    }\r\n\r\n    // Gets all movies that the actor or actress has been in\r\n    async getMovies(){\r\n        await fetch('https://api.themoviedb.org/3/person/'+this.state.castId+'/movie_credits?api_key='+this.apiKey+'&language=en-US')\r\n\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                this.setState({movies: data.cast,loading:false})\r\n            })\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getMovies()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <h1 className=\"heading\">Movies by {this.state.castName}</h1>\r\n                {\r\n                    this.state.loading === true?\r\n                        <h1>Loading...</h1>\r\n                        :\r\n                        <MovieList movies={this.state.movies}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\home.js",["322"],"import React, { Component } from 'react';\r\nimport HomePageHeader from \"../components/homepage-header\";\r\nimport Footer from \"../components/footer\";\r\nimport mainPage from \"./../images/mainpage.JPG\"\r\nimport movieDetails from \"./../images/moviedetails.JPG\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\n// Home page prior to logging in - has information about the website\r\nexport default class HomePage extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <HomePageHeader/>\r\n                <div className=\"div-home\">\r\n                    <h1 className=\"text-center\" style={{color:\"white\", fontSize:\"60px\", fontFamily:\"monospace\", textShadow:\"-5px -2px 0 #3b4c48, 1px -1px 0 #3b4c48, -1px -2px 0 #3b4c48\"}}>MOVIEREC</h1>\r\n                    <p className=\"text-center\" style={{color:\"white\", fontSize:\"30px\", fontFamily:\"monospace\"}}>This website was created for a dissertation project in 2021.</p>\r\n                    <div style={{ display:\"flex\", flexDirection: \"row\"}}>\r\n\t\t\t\t\t\t\t<Link className=\"btn btn-primary\" style={{backgroundColor:\"#2b6777\", marginRight:\"15px\", alignItems:\"center\"}} to=\"/signup\">Sign Up</Link>\r\n                            <Link className=\"btn btn-primary\" style={{backgroundColor:\"#2b6777\", alignItems:\"center\"}} to=\"/login\">Sign In</Link>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"content\">\r\n                        <p style={{fontSize:\"22px\", fontFamily:\"auto\"}}> MovieRec is a personalised movie recommendation website.\r\n                               You rate movies and they are used to provide reliable recommendations to you. It uses the Item-Based Collaborative Filtering technique\r\n                                to provide recommendations. The movies displayed are using the TMDB API.</p>\r\n                        <div style={{display:\"flex\", marginTop:\"20px\"}}>\r\n                            <div  style={{float:\"left\", height:\"50%\", width:\"90\"}}>\r\n                                <img src={mainPage} alt=\"main-page-display\" style={{height:\"100%\", width:\"100%\"}}/>\r\n                            </div>\r\n                            <div style={{float:\"right\"}}>\r\n                                <p style={{fontSize:\"22px\", textAlign:\"center\", fontFamily:\"monospace\", width:\"80%\", marginLeft:\"30px\"}}>MovieRec helps you find movies that you are likely to enjoy.\r\n                                   You can rate movies to build your MovieRec profile, then you get recommendations based on\r\n                                  your ratings.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{display:\"flex\", marginTop:\"20px\"}}>\r\n                            <div style={{float:\"left\"}}>\r\n                                <p style={{fontSize:\"22px\", textAlign:\"center\", fontFamily:\"monospace\", width:\"80%\", marginTop:\"30px\"}}>You can search for movies by name or even by genre. You can watch the trailer\r\n                                     and find the content link to the movie.</p>\r\n                            </div>\r\n                            <div  style={{float:\"right\", height:\"50%\", width:\"90\", marginLeft:\"10px\"}}>\r\n                                <img src={movieDetails} alt=\"main-page-display\" style={{height:\"100%\", width:\"100%\"}}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\main.js",["323"],"import React, { Component } from \"react\";\r\nimport Header from \"../components/header\";\r\nimport SearchBox from \"../components/searchbox\";\r\nimport MovieList from \"../components/movielist\";\r\nimport CarouselMovies from \"../components/carouselmovies\"\r\nimport PreferenceElicitation from \"../components/preferenceelicitation\";\r\nimport firebase from \"firebase\";\r\nimport { auth } from \"../services/firebase\";\r\nimport styles from \"./../App.css\"\r\nimport Footer from \"../components/footer\";\r\n\r\n// Main page with carousels of movies\r\nexport default class Main extends Component {\r\n    constructor() {\r\n        super()\r\n        this.refreshPage = this.refreshPage.bind(this)\r\n        this.apiKey = process.env.REACT_APP_TMDB_API_KEY\r\n        this.uuid = auth().currentUser.uid\r\n        this.state = {\r\n            popular:[],\r\n            latest:[],\r\n            toprated:[],\r\n            movies:[],\r\n            searchTerm: '',\r\n            isSubmit: false,\r\n            isLoaded: false,\r\n            isPref:false\r\n        }\r\n        //Maybe change this to be in an .env file to make it private\r\n\r\n    }\r\n\r\n\r\n    // Handles a search request\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        fetch('https://api.themoviedb.org/3/search/movie?api_key=' + this.apiKey + '&language=en-US&query=' + this.state.searchTerm)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                this.setState({movies: [...data.results]})\r\n            })\r\n\r\n\r\n        if (this.state.searchTerm === '') {\r\n            this.setState({isSubmit: false})\r\n        } else {\r\n            this.setState({isSubmit: true})\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if (this.state.searchTerm === '') {\r\n            this.setState({isSubmit: false})\r\n        }\r\n        this.setState({searchTerm: e.target.value})\r\n    }\r\n\r\n    // Gets the popular movies from API\r\n    getPopularMovies = () => {\r\n        fetch('https://api.themoviedb.org/3/movie/popular?api_key='\r\n            +this.apiKey+'&language=en-US&page=1')\r\n            .then(data => data.json())\r\n            .then(data =>\r\n            {\r\n                this.setState({popular:[...data.results]})\r\n            })\r\n        return this.state.popular;\r\n    }\r\n\r\n    // Gets most grossing movies from API\r\n    getBiggestGrossingMovies =() => {\r\n        fetch('https://api.themoviedb.org/3/discover/movie?api_key='+this.apiKey+'&language=en-US&sort_by=revenue.desc&include_adult=false&include_video=false&page=1')\r\n            .then(data => data.json())\r\n            .then(data =>\r\n            {\r\n                this.setState({toprated:[...data.results]})\r\n            })\r\n        return this.state.toprated;\r\n\r\n\r\n\r\n    }\r\n\r\n    // Gets the latest movies from API\r\n    getLatestMovies = () => {\r\n        fetch('https://api.themoviedb.org/3/movie/upcoming?api_key='+this.apiKey+'&language=en-US')\r\n            .then(data => data.json())\r\n            .then(data =>\r\n            {\r\n\r\n                this.setState({latest:[...data.results]})\r\n\r\n            })\r\n        return this.state.latest;\r\n\r\n    }\r\n\r\n    // If it's users first time logging in, preference elicitation is done.\r\n    async setPref() {\r\n        let num = 0\r\n        let docRef = firebase.firestore().collection(\"Users\")\r\n            .doc(this.uuid).collection(\"Ratings\")\r\n\r\n        await docRef.where('rating', \"==\", 4).get().then(snapshot => {\r\n            num = num + snapshot.size\r\n        })\r\n\r\n        await docRef.where('rating', \"==\", 5).get().then(snapshot => {\r\n            num = num + snapshot.size\r\n        })\r\n        if (num < 3) {\r\n            await this.setState({isPref: true})\r\n        }\r\n\r\n        this.setState({isLoaded:true})\r\n    }\r\n\r\n    // Once the preference elicitation is done, it refreshes the page\r\n    async refreshPage() {\r\n        await this.setState({isPref: false})\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setPref()\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoaded === true){\r\n            if (this.state.isPref === true) {\r\n                return (\r\n                    <div style={styles}>\r\n                        <Header/>\r\n                        <div className=\"div\">\r\n                            <PreferenceElicitation refreshPage={this.refreshPage}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div style={styles}>\r\n                        <Header/>\r\n                        <div className=\"div\">\r\n\r\n                            <SearchBox handleSubmit={this.handleSubmit} handleChange={this.handleChange}/>\r\n                            {\r\n                                this.state.isSubmit === false ?\r\n                                    <div>\r\n                                        <h1 className=\"heading\">POPULAR MOVIES</h1>\r\n                                        <CarouselMovies movies={this.getPopularMovies()}/>\r\n                                        <h1 className=\"heading\">LATEST</h1>\r\n                                        <CarouselMovies movies={this.getLatestMovies()}/>\r\n                                        <h1 className=\"heading\">TOP GROSSING FILMS</h1>\r\n                                        <CarouselMovies movies={this.getBiggestGrossingMovies()}/>\r\n                                    </div>\r\n                                    :\r\n                                    <div>\r\n                                        <h1 className=\"heading\">You searched {this.state.searchTerm}</h1>\r\n                                        <MovieList movies={this.state.movies}/>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }else{\r\n            return(<h2>Loading...</h2>)\r\n        }\r\n    }\r\n\r\n}","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\firebase.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\auth.js",["324"],"import { auth } from './firebase';\r\nimport firebase from \"firebase\";\r\n\r\n// These are the functions to carry out the authentication\r\n\r\n// Signing up a user\r\nexport function signup(email, password) {\r\n  return auth().createUserWithEmailAndPassword(email, password).\r\n      then(function (user) {\r\n          firebase.firestore().collection('Users').doc(user.user.uid).set({email : email})\r\n          console.log(\"uuid: \" + user.user.uid)\r\n      } )\r\n}\r\n\r\n// Sending an email to user and alerting them to look at their email\r\nexport function verifyAccount(){\r\n    let verified = auth().currentUser.emailVerified\r\n    console.log(verified)\r\n    if (!verified){\r\n        return auth().currentUser.sendEmailVerification().then(function(){\r\n                  alert('Email has been sent to ' + auth().currentUser.email + ' for verification')\r\n              })\r\n    }\r\n}\r\n\r\n// Checks if user is verified\r\nexport function isVerified(){\r\n    return auth().currentUser.emailVerified\r\n}\r\n\r\n// Logging in the user\r\nexport function signin(email, password) {\r\n    return auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\n// Logging out the user\r\nexport function logout() {\r\n  return auth().signOut()\r\n}\r\n\r\n// Deleting an account\r\nexport function deleteUser() {\r\n    return auth().currentUser.delete()\r\n}\r\n\r\n// Send email to user to reset password\r\nexport function forgotPassword(Email){\r\n    return auth().sendPasswordResetEmail(Email)\r\n          .then(function (user) {\r\n            alert('Email has been sent to ' + user)\r\n          })\r\n}","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\header.js",["325"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../services/firebase';\r\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport styles from \"./../App.css\"\r\nimport Logout from \"./logout\";\r\n\r\n\r\n// Header component to be displayed on every page apart from home page\r\nfunction Header() {\r\n    if(auth().currentUser) {\r\n        return (\r\n            <header style={styles}>\r\n                <Navbar collapseOnSelect className=\"header\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/main\" style={{\r\n                        color: \"white\",\r\n                        fontFamily: \"Marker Felt, fantasy\",\r\n                        fontSize: \"23px\"\r\n                    }}>MovieRec</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/main\">All Movies</Nav.Link>\r\n                            <Nav.Link href=\"/recommendations\">Recommended Movies</Nav.Link>\r\n                            <Nav.Link href=\"/watchlater\">Watch Later</Nav.Link>\r\n                            <Nav.Link href=\"/ratedmovies\">Rated Movies</Nav.Link>\r\n                            <NavDropdown title=\"Genres\" id=\"collasible-nav-dropdown\">\r\n                                <NavDropdown.Item href=\"/genres#Action\">Action</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Animation\">Animation</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Comedy\">Comedy</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Crime\">Crime</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Documentary\">Documentary</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Family\">Family</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#History\">History</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Horror\">Horror</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Mystery\">Mystery</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Romance\">Romance</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Science-Fiction\">Science Fiction</NavDropdown.Item>\r\n                                <NavDropdown.Item href=\"/genres#Thriller\">Thriller</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown.Divider/>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <div>\r\n                                <div className=\"navbar-nav\">\r\n                                    <NavDropdown title=\"Profile\" id=\"collasible-nav-dropdown\">\r\n                                        <NavDropdown.Item href=\"/profile/settings\">Settings</NavDropdown.Item>\r\n                                        <NavDropdown.Item href=\"/profile/friends\">Your Friends</NavDropdown.Item>\r\n                                        <NavDropdown.Item href=\"/profile/ratings\">Your Ratings Data</NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                    <Logout/>\r\n                                </div>\r\n                            </div>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\assets\\canvasjs.react.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\homepage-header.js",["326"],"import React from 'react';\r\nimport { auth } from '../services/firebase';\r\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport styles from \"./../App.css\"\r\n\r\n// Header component that is displayed on the home page\r\nfunction HomePageHeader() {\r\n  return (\r\n    <header style={styles}>\r\n      <Navbar collapseOnSelect  className=\"header\" expand=\"lg\">\r\n        <Navbar.Brand href=\"/main\" style={{color:\"white\",fontFamily:\"Marker Felt, fantasy\", fontSize:\"23px\"}}>MovieRec</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav>\r\n            <div>\r\n              {auth().currentUser ?\r\n                  <div className=\"navbar-nav\">\r\n                    <Nav.Link href=\"/profile/settings\">Profile</Nav.Link>\r\n                    <button className=\"btn btn-primary\" onClick={() => auth().signOut()}>Logout</button>\r\n                  </div>\r\n                  :\r\n                  <div className=\"navbar-nav\">\r\n                    <Nav.Link href=\"/login\">Sign In</Nav.Link>\r\n                    <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default HomePageHeader;","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\assets\\canvasjs.min.js",[],["327","328"],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\forgotpassword.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\friendspage.js",["329"],"import React, {Component} from \"react\";\r\nimport {auth} from \"../services/firebase\";\r\nimport firebase from \"firebase\";\r\nimport Header from \"../components/header\";\r\nimport Footer from \"../components/footer\";\r\n\r\n// Displays the friends the user has added and any requests they have\r\nexport default class FriendsPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        \twhat:\"\",\r\n          \tuser: auth().currentUser,\r\n\t\t\terror:\"\",\r\n\t\t\tfriends:[],\r\n\t\t\tfriendRequests:[],\r\n\t\t\taccepted:false\r\n        };\r\n        this.docRefUsers = firebase.firestore().collection(\"Users\")\r\n\t\tthis.docRef = this.docRefUsers.doc(this.state.user.uid)\r\n\r\n    }\r\n\r\n\t// Gets the friends and friends request list from database\r\n\tasync componentDidMount() {\r\n    \tlet localFriendsEmails = []\r\n\t\tawait this.docRef.collection(\"Friends\").get().then(snapshot =>{\r\n\t\t\tsnapshot.forEach(doc =>{\r\n\t\t\t\tif(doc.data().accepted){\r\n\t\t\t\t\tlocalFriendsEmails.push(doc.data().email)\r\n\t\t\t\t}\r\n\r\n\t\t\t})\r\n\r\n\r\n\t\t})\r\n\t\tawait this.setState({friends:localFriendsEmails})\r\n\r\n    \tlet localFriendRequestEmails = []\r\n\t\tawait this.docRef.collection(\"FriendRequests\").get().then(snapshot =>{\r\n\t\t\tsnapshot.forEach(doc =>{\r\n\t\t\t\tlocalFriendRequestEmails.push(doc.data().email)\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tawait this.setState({friendRequests:localFriendRequestEmails})\r\n\r\n\t}\r\n\r\n\t// Handles the adding of a friend by sending a request to them\r\n\thandleAdd = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst email = event.target.friendEmail.value;\r\n\t\tlet validEmail = false;\r\n\t\tlet added = false;\r\n\t\tlet size = \"\"\r\n\t\tif (email !== \"\"){\r\n\r\n\t\t\tawait this.docRef.collection(\"Friends\").get().then(value=> {\r\n\t\t\t\tsize = value.size\r\n\t\t\t})\r\n\r\n\t\t\t// Checks if the user already has 5 friends\r\n\t\t\tif(size < 5){\r\n\t\t\t\tawait this.docRefUsers.where('email','==',email).limit(1).get().then(snapshot => {\r\n\t\t\t\t\t\tif (!snapshot.empty) {\r\n\t\t\t\t\t\t\tvalidEmail = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\r\n\t\t\t\t// Checks if inputted email is valid, if it is, then the user is sent a request\r\n\t\t\t\tif (validEmail){\r\n\t\t\t\t\tawait this.docRef.collection(\"Friends\").where('email','==',email)\r\n\t\t\t\t\t\t.limit(1).get().then(snapshot =>{\r\n\t\t\t\t\t\t\tif(snapshot.empty){\r\n\t\t\t\t\t\t\t\tadded = true;\r\n\t\t\t\t\t\t\t\tthis.docRef.collection(\"Friends\").add({email:email,accepted:false})\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tif(snapshot.docs[0].data().accepted === true){\r\n\t\t\t\t\t\t\t\t\tthis.setState({error:\"friend-already-exists\"})\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tthis.setState({error:\"friend-request-already-sent\"})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\tif (added){\r\n\t\t\t\t\t\tlet id = \"\"\r\n\t\t\t\t\t\tawait this.docRefUsers.where('email','==', email).get().then(snapshot =>{\r\n\t\t\t\t\t\t\tsnapshot.forEach(function(doc) {\r\n\t\t\t\t\t\t\t\tconsole.log(doc.id)\r\n\t\t\t\t\t\t\t\tid = doc.id\r\n\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tawait this.docRefUsers.doc(id).collection(\"FriendRequests\").add({email:this.state.user.email,accepted:false})\r\n\t\t\t\t\t\talert(\"Friend added\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setState({error:\"email-not-exist\"})\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tthis.setState({error:\"5-friends-already\"})\r\n\t\t\t}\r\n    \t}\r\n\t\t\r\n    \tevent.target.reset()\r\n\t}\r\n\r\n\t// Called when a user accepts their request\r\n\tasync acceptRequest(user) {\r\n\r\n\t\tlet id = \"\"\r\n\t\tawait this.docRefUsers.where('email', '==', user).get().then(snapshot => {\r\n\t\t\tsnapshot.forEach(function (doc) {\r\n\t\t\t\tconsole.log(doc.id)\r\n\t\t\t\tid = doc.id\r\n\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tawait this.docRefUsers.doc(id).collection(\"Friends\").where('email','==',this.state.user.email).limit(1).get().then(value => {\r\n\t\t\tif(!value.empty){\r\n\t\t\t\tvalue.docs[0].ref.update({accepted:true})\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tawait this.docRef.collection(\"FriendRequests\").where('email','==',user).limit(1).get().then(value => {\r\n\t\t\tvalue.docs[0].ref.delete()\r\n\t\t})\r\n\r\n\t\tawait this.docRef.collection(\"Friends\").add({email:user,accepted:true}).then(() => {\r\n\t\t\twindow.location.reload()\r\n\t\t\talert(user + \" has been added\")\r\n\t\t})\r\n\r\n\t}\r\n\r\n\t// Called when a user declines a request\r\n\tasync declineRequest(user) {\r\n\t\tawait this.docRef.collection(\"FriendRequests\").where('email', '==', user).limit(1).get().then(function(querySnapshot) {\r\n          const promises = [];\r\n          querySnapshot.forEach(function(doc) {\r\n            promises.push(doc.ref.delete());\r\n          })\r\n          return Promise.all(promises);\r\n        })\r\n        .then(() => {\r\n          window.location.reload()\r\n\t\t\talert(user + \" request has been deleted\")\r\n        })\r\n\r\n\t}\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div >\r\n                <Header/>\r\n                <h1 className=\"heading\">Add Friend</h1>\r\n                <div style={{alignContent:\"center\",alignItems:\"center\"}}>\r\n                    <form onSubmit={this.handleAdd} style={{marginLeft:\"10px\"}}>\r\n                        <div className=\"form-group col-md-6\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"firstname\">Add Friend with email address</label>\r\n                            {\r\n                                this.state.error === \"friend-already-exists\"?\r\n                                    <p className=\"text-danger\">Email address already exists in friends list</p>:\r\n\t\t\t\t\t\t\t\t\tthis.state.error === \"email-not-exist\"?\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-danger\">Email address does not exist</p>\r\n                                    :this.state.error ===\"friend-request-already-sent\"?\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-danger\">Friend request already sent to this email</p>:\r\n\t\t\t\t\t\t\t\t\t\tthis.state.error === \"5-friends-already\"?\r\n\t\t\t\t\t\t\t\t\t\t<p className=\"text-danger\">Cannot add more than 5 friends</p>:null\r\n                            }\r\n                            <div style={{ display:\"flex\", flexDirection: \"row\"}}>\r\n                                <input type=\"text\" id=\"friendEmail\" className=\"form-control\" placeholder=\"Enter email address\"/>\r\n                                <button type=\"submit\" className=\"btn btn-primary\" id=\"add\" style={{marginLeft:\"35px\"}}>Add</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                    <div className=\"column1-settings\" style={{marginTop:\"20px\"}}>\r\n                        <h1 className=\"heading\">Your Friends</h1>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.friends.length === 0?<p style={{fontFamily:\"sans-serif\",fontSize:\"18px\", marginLeft:\"10px\"}}>No Friends Added</p>:null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<ul>\r\n                        {\r\n                            this.state.friends.map((val)=>(\r\n\r\n                                <li style={{fontFamily:\"sans-serif\",fontSize:\"18px\", marginLeft:\"10px\"}}>{val}</li>\r\n\r\n                            ))\r\n                        }\r\n                        </ul>\r\n\r\n                    </div>\r\n                    <div className=\"column2-settings\" style={{marginTop:\"20px\"}} >\r\n                        <h1 className=\"heading\">Friend Requests</h1>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.friendRequests.length === 0?<p style={{fontFamily:\"sans-serif\",fontSize:\"18px\", marginLeft:\"10px\"}}>No Friend Requests</p>:null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<ul>\r\n                        {\r\n                            this.state.friendRequests.map((val)=>(\r\n\r\n                                <li style={{fontFamily:\"sans-serif\",fontSize:\"18px\", marginLeft:\"10px\"}}>{val}<button style={{marginLeft:10, backgroundColor:\"#0a7756\", color:\"white\"}} onClick={()=>this.acceptRequest(val)}>Accept</button><button style={{marginLeft:10, backgroundColor:\"#bc0a0a\",color:\"white\"}} onClick={()=>this.declineRequest(val)}>Decline</button></li>\r\n\r\n                            ))\r\n                        }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\footer.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\searchbox.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\movielist.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\preferenceelicitation.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\carouselmovies.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\rating.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\watchlaterbutton.js",[],"C:\\Users\\nihar\\Documents\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\logout.js",[],{"ruleId":"330","replacedBy":"331"},{"ruleId":"332","replacedBy":"333"},{"ruleId":"330","replacedBy":"334"},{"ruleId":"332","replacedBy":"335"},{"ruleId":"330","replacedBy":"336"},{"ruleId":"332","replacedBy":"337"},{"ruleId":"338","severity":1,"message":"339","line":5,"column":64,"nodeType":"340","messageId":"341","endLine":5,"endColumn":65,"fix":"342"},{"ruleId":"343","severity":1,"message":"344","line":10,"column":8,"nodeType":"345","messageId":"346","endLine":10,"endColumn":11},{"ruleId":"343","severity":1,"message":"347","line":2,"column":10,"nodeType":"345","messageId":"346","endLine":2,"endColumn":14},{"ruleId":"330","replacedBy":"348"},{"ruleId":"332","replacedBy":"349"},{"ruleId":"343","severity":1,"message":"350","line":2,"column":17,"nodeType":"345","messageId":"346","endLine":2,"endColumn":24},{"ruleId":"343","severity":1,"message":"351","line":3,"column":8,"nodeType":"345","messageId":"346","endLine":3,"endColumn":14},{"ruleId":"343","severity":1,"message":"352","line":3,"column":9,"nodeType":"345","messageId":"346","endLine":3,"endColumn":15},{"ruleId":"343","severity":1,"message":"353","line":17,"column":7,"nodeType":"345","messageId":"346","endLine":17,"endColumn":32},{"ruleId":"343","severity":1,"message":"347","line":2,"column":10,"nodeType":"345","messageId":"346","endLine":2,"endColumn":14},{"ruleId":"343","severity":1,"message":"354","line":86,"column":13,"nodeType":"345","messageId":"346","endLine":86,"endColumn":18},{"ruleId":"355","severity":1,"message":"356","line":165,"column":33,"nodeType":"357","endLine":165,"endColumn":97},{"ruleId":"343","severity":1,"message":"358","line":62,"column":13,"nodeType":"345","messageId":"346","endLine":62,"endColumn":19},{"ruleId":"343","severity":1,"message":"359","line":2,"column":8,"nodeType":"345","messageId":"346","endLine":2,"endColumn":13},{"ruleId":"343","severity":1,"message":"351","line":3,"column":8,"nodeType":"345","messageId":"346","endLine":3,"endColumn":14},{"ruleId":"343","severity":1,"message":"360","line":7,"column":5,"nodeType":"345","messageId":"346","endLine":7,"endColumn":12},{"ruleId":"343","severity":1,"message":"361","line":8,"column":5,"nodeType":"345","messageId":"346","endLine":8,"endColumn":12},{"ruleId":"343","severity":1,"message":"362","line":9,"column":5,"nodeType":"345","messageId":"346","endLine":9,"endColumn":10},{"ruleId":"343","severity":1,"message":"363","line":3,"column":22,"nodeType":"345","messageId":"346","endLine":3,"endColumn":33},{"ruleId":"330","replacedBy":"364"},{"ruleId":"332","replacedBy":"365"},{"ruleId":"343","severity":1,"message":"366","line":6,"column":8,"nodeType":"345","messageId":"346","endLine":6,"endColumn":14},{"ruleId":"330","replacedBy":"367"},{"ruleId":"332","replacedBy":"368"},{"ruleId":"343","severity":1,"message":"369","line":23,"column":8,"nodeType":"345","messageId":"346","endLine":23,"endColumn":16},{"ruleId":"343","severity":1,"message":"366","line":6,"column":8,"nodeType":"345","messageId":"346","endLine":6,"endColumn":14},{"ruleId":"343","severity":1,"message":"366","line":7,"column":8,"nodeType":"345","messageId":"346","endLine":7,"endColumn":14},{"ruleId":"370","severity":1,"message":"371","line":78,"column":46,"nodeType":"372","messageId":"373","endLine":78,"endColumn":47},{"ruleId":"355","severity":1,"message":"356","line":190,"column":33,"nodeType":"357","endLine":190,"endColumn":97},{"ruleId":"343","severity":1,"message":"366","line":4,"column":8,"nodeType":"345","messageId":"346","endLine":4,"endColumn":14},{"ruleId":"343","severity":1,"message":"366","line":7,"column":8,"nodeType":"345","messageId":"346","endLine":7,"endColumn":14},{"ruleId":"343","severity":1,"message":"366","line":6,"column":8,"nodeType":"345","messageId":"346","endLine":6,"endColumn":14},{"ruleId":"343","severity":1,"message":"366","line":6,"column":8,"nodeType":"345","messageId":"346","endLine":6,"endColumn":14},{"ruleId":"343","severity":1,"message":"366","line":4,"column":8,"nodeType":"345","messageId":"346","endLine":4,"endColumn":14},{"ruleId":"343","severity":1,"message":"366","line":3,"column":8,"nodeType":"345","messageId":"346","endLine":3,"endColumn":14},{"ruleId":"343","severity":1,"message":"366","line":10,"column":8,"nodeType":"345","messageId":"346","endLine":10,"endColumn":14},{"ruleId":"338","severity":1,"message":"339","line":8,"column":64,"nodeType":"340","messageId":"341","endLine":8,"endColumn":65,"fix":"374"},{"ruleId":"343","severity":1,"message":"347","line":2,"column":10,"nodeType":"345","messageId":"346","endLine":2,"endColumn":14},{"ruleId":"343","severity":1,"message":"363","line":3,"column":22,"nodeType":"345","messageId":"346","endLine":3,"endColumn":33},{"ruleId":"330","replacedBy":"375"},{"ruleId":"332","replacedBy":"376"},{"ruleId":"343","severity":1,"message":"366","line":5,"column":8,"nodeType":"345","messageId":"346","endLine":5,"endColumn":14},"no-native-reassign",["377"],"no-negated-in-lhs",["378"],["377"],["378"],["377"],["378"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"379","text":"380"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["377"],["378"],"'MDBIcon' is defined but never used.","'styles' is defined but never used.","'Button' is defined but never used.","'breakPoints_forPreference' is assigned a value but never used.","'cast1' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'variab' is assigned a value but never used.","'Popup' is defined but never used.","'Popover' is defined but never used.","'Tooltip' is defined but never used.","'Modal' is defined but never used.","'NavDropdown' is defined but never used.",["377"],["378"],"'Footer' is defined but never used.",["377"],["378"],"'ReactDOM' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",{"range":"381","text":"380"},["377"],["378"],"no-global-assign","no-unsafe-negation",[192,201],"\r\n      .",[262,271]]