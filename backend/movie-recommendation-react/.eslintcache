[{"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\index.js":"1","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\reportWebVitals.js":"2","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\App.js":"3","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Home.js":"4","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Profile.js":"5","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Signup.js":"6","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Login.js":"7","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\firebase.js":"8","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\auth.js":"9","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\profile.js":"10","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\signup.js":"11","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\login.js":"12","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\home.js":"13","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\main.js":"14","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\Header.js":"15","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\searchbox.js":"16","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\movielist.js":"17","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\movie.js":"18","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\carouselmovies.js":"19","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\header.js":"20","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\rating.js":"21","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\moviedetails.js":"22","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\recommendations.js":"23","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\settings.js":"24","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\watchlaterbutton.js":"25","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\watchlater.js":"26","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\genres.js":"27"},{"size":227,"mtime":1612811075714,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":2600,"mtime":1615744236300,"results":"31","hashOfConfig":"29"},{"size":235,"mtime":1609871212371,"results":"32","hashOfConfig":"29"},{"size":684,"mtime":1609871247937,"results":"33","hashOfConfig":"29"},{"size":1915,"mtime":1609871293581,"results":"34","hashOfConfig":"29"},{"size":1915,"mtime":1609871230471,"results":"35","hashOfConfig":"29"},{"size":479,"mtime":1615484290308,"results":"36","hashOfConfig":"29"},{"size":548,"mtime":1615484290316,"results":"37","hashOfConfig":"29"},{"size":447,"mtime":1615484290255,"results":"38","hashOfConfig":"29"},{"size":2540,"mtime":1615484290233,"results":"39","hashOfConfig":"29"},{"size":2429,"mtime":1615484290286,"results":"40","hashOfConfig":"29"},{"size":484,"mtime":1615484290298,"results":"41","hashOfConfig":"29"},{"size":5198,"mtime":1615571117850,"results":"42","hashOfConfig":"29"},{"size":3426,"mtime":1611331195838,"results":"43","hashOfConfig":"29"},{"size":1415,"mtime":1615570657832,"results":"44","hashOfConfig":"29"},{"size":1961,"mtime":1615652867563,"results":"45","hashOfConfig":"29"},{"size":712,"mtime":1610371184467,"results":"46","hashOfConfig":"29"},{"size":1964,"mtime":1615484290303,"results":"47","hashOfConfig":"29"},{"size":2952,"mtime":1615751371015,"results":"48","hashOfConfig":"29"},{"size":4180,"mtime":1615647321625,"results":"49","hashOfConfig":"29"},{"size":4985,"mtime":1615484290267,"results":"50","hashOfConfig":"29"},{"size":5279,"mtime":1615484290243,"results":"51","hashOfConfig":"29"},{"size":3863,"mtime":1615056272438,"results":"52","hashOfConfig":"29"},{"size":1584,"mtime":1615653665498,"results":"53","hashOfConfig":"29"},{"size":1934,"mtime":1615657804436,"results":"54","hashOfConfig":"29"},{"size":2856,"mtime":1615752518281,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"18hmr6o",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\index.js",[],["128","129"],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\reportWebVitals.js",[],["130","131"],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\App.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Home.js",[],["132","133"],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Profile.js",["134","135","136"],"import React, { Component } from \"react\";\r\nimport { auth, db } from \"../services/firebase\";\r\nimport Alert from 'react'\r\nimport {logout} from \"../services/auth\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: auth().currentUser\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  shoot() {\r\n   alert(\"Great Shot!\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <h1> PROFILE </h1>\r\n        <div>\r\n          Login in as: <strong>{this.state.user.email}</strong>\r\n        </div>\r\n        <div>\r\n          <button onClick={() => auth().signOut()}>Logout</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Signup.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\Login.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\firebase.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\services\\auth.js",["137"],"import { auth } from './firebase';\r\nimport firebase from \"firebase\";\r\n\r\nexport function signup(email, password, dob, address) {\r\n  return auth().createUserWithEmailAndPassword(email, password).\r\n      then(function (user) {\r\n          firebase.firestore().collection('Users').doc(user.user.uid).set({email : email})\r\n          console.log(\"uuid: \" + user.user.uid)\r\n      } )\r\n}\r\n\r\nexport function signin(email, password) {\r\n  return auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nexport function logout() {\r\n  return auth().signOut()\r\n}","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\profile.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\signup.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\login.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\home.js",["138"],"import React, { Component } from 'react';\r\nimport {auth} from \"../services/firebase\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section>\r\n          <h1>Home page</h1>\r\n            <p1>\r\n            <Link to=\"/login\">Login</Link>\r\n            </p1>\r\n            <p2>\r\n            <Link to=\"/signup\">Sign up</Link>\r\n            </p2>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\main.js",["139"],"import React, { Component } from \"react\";\r\nimport Header from \"../components/header\";\r\nimport SearchBox from \"./searchbox\";\r\nimport MovieList from \"./movielist\";\r\nimport CarouselMovies from \"./carouselmovies\"\r\nimport styles from \"./../App.css\"\r\n\r\nexport default class Main extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            popular:[],\r\n            latest:[],\r\n            toprated:[],\r\n            search:[],\r\n            movies:[],\r\n            searchTerm: '',\r\n            isSubmit: false,\r\n            isLoaded: false\r\n        }\r\n        this.apiKey = '0e4224cc4fec38376b7e3f8f073a68c6'\r\n        //Maybe change this to be in an .env file to make it private\r\n        //console.log(\"search term: \" + this.state.searchTerm)\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // this.setState({isSubmit:true})\r\n        fetch('https://api.themoviedb.org/3/search/movie?api_key=' + this.apiKey + '&language=en-US&query=' + this.state.searchTerm)\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                this.setState({movies: [...data.results]})\r\n            })\r\n\r\n\r\n        if (this.state.searchTerm === '') {\r\n            this.setState({isSubmit: false})\r\n        } else {\r\n            this.setState({isSubmit: true})\r\n        }\r\n        this.setState({isLoaded:true})\r\n\r\n    }\r\n    // I changed everything to go back to movies:[] instead of each individual\r\n    handleChange = (e) => {\r\n        if (this.state.searchTerm === '') {\r\n            this.setState({isSubmit: false})\r\n        }\r\n        this.setState({searchTerm: e.target.value})\r\n    }\r\n\r\n\r\n    getPopularMovies = () => {\r\n        // console.log(\"search term: \" + this.state.searchTerm)\r\n        fetch('https://api.themoviedb.org/3/movie/popular?api_key='+this.apiKey+'&language=en-US&page=1')\r\n            .then(data => data.json())\r\n            .then(data =>\r\n            {\r\n                // console.log(data)\r\n                this.setState({popular:[...data.results]})\r\n                // let movies = {movies:[...data.results]}\r\n                // return movies.movies;\r\n            })\r\n        return this.state.popular;\r\n    }\r\n\r\n    getTopRatedMovies = () => {\r\n        // console.log(\"search term: \" + this.state.searchTerm)\r\n        fetch('https://api.themoviedb.org/3/movie/top_rated?api_key='+this.apiKey+'&language=en-US&page=1')\r\n            .then(data => data.json())\r\n            .then(data =>\r\n            {\r\n                this.setState({toprated:[...data.results]})\r\n            })\r\n        return this.state.toprated;\r\n    }\r\n\r\n\r\n    getBiggestGrossingMovies =() => {\r\n        fetch('https://api.themoviedb.org/3/discover/movie?api_key='+this.apiKey+'&language=en-US&sort_by=revenue.desc&include_adult=false&include_video=false&page=1')\r\n            .then(data => data.json())\r\n            .then(data =>\r\n            {\r\n                this.setState({toprated:[...data.results]})\r\n            })\r\n        return this.state.toprated;\r\n\r\n\r\n\r\n    }\r\n    // This doesnt give a console error if we get popular movies\r\n    getLatestMovies = () => {\r\n        // console.log(\"search term: \" + this.state.searchTerm)\r\n        fetch('https://api.themoviedb.org/3/movie/upcoming?api_key='+this.apiKey+'&language=en-US')\r\n            .then(data => data.json())\r\n            .then(data =>\r\n            {\r\n\r\n                this.setState({latest:[...data.results]})\r\n\r\n            })\r\n        return this.state.latest;\r\n\r\n    }\r\n    render() {\r\n        // let latestMovies = this.getLatestMovies()\r\n        // let topRatedMovies = this.getTopRatedMovies()\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div>\r\n                    <SearchBox handleSubmit = {this.handleSubmit} handleChange = {this.handleChange}/>\r\n                    {\r\n                        this.state.isSubmit === false ?\r\n                        <div>\r\n                            <h1 className=\"heading\">POPULAR MOVIES</h1>\r\n                            <CarouselMovies movies={this.getPopularMovies()}/>\r\n                            <h1 className=\"heading\">LATEST</h1>\r\n                            <CarouselMovies movies={this.getLatestMovies()}/>\r\n                            <h1 className=\"heading\">TOP GROSSING FILMS</h1>\r\n                            <CarouselMovies movies={this.getBiggestGrossingMovies()}/>\r\n                        </div>\r\n                            :\r\n                        <div>\r\n                            <h1 className=\"heading\">You searched {this.state.searchTerm}</h1>\r\n                            {/*{*/}\r\n                            {/*    this.state.isLoaded === false ?*/}\r\n                            {/*        <h2>Loading movies...</h2>*/}\r\n                            {/*        :*/}\r\n                            <MovieList movies={this.state.movies}/>\r\n                            {/*}*/}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//\r\n//   {\r\n//     (this.state.searchTerm = '') ?\r\n//         <MovieList movies={this.getPopularMovies()}/>:\r\n//         <MovieList movies={this.state.movies}/>\r\n// }","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\Header.js",["140"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../services/firebase';\r\nimport * as ReactBootstrap from 'react-bootstrap';\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n\r\n      <ReactBootstrap.Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <ReactBootstrap.Navbar.Brand href=\"/main\">Movie Recommender</ReactBootstrap.Navbar.Brand>\r\n        <ReactBootstrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <ReactBootstrap.Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <ReactBootstrap.Nav className=\"mr-auto\">\r\n            <ReactBootstrap.Nav.Link href=\"/main\">All Movies</ReactBootstrap.Nav.Link>\r\n            <ReactBootstrap.Nav.Link href=\"#pricing\">Recommended Movies</ReactBootstrap.Nav.Link>\r\n            <ReactBootstrap.NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <ReactBootstrap.NavDropdown.Item href=\"#action/3.1\">Action</ReactBootstrap.NavDropdown.Item>\r\n              <ReactBootstrap.NavDropdown.Item href=\"#action/3.2\">Another action</ReactBootstrap.NavDropdown.Item>\r\n              <ReactBootstrap.NavDropdown.Item href=\"#action/3.3\">Something</ReactBootstrap.NavDropdown.Item>\r\n              <ReactBootstrap.NavDropdown.Divider />\r\n              <ReactBootstrap.NavDropdown.Item href=\"#action/3.4\">Separated link</ReactBootstrap.NavDropdown.Item>\r\n            </ReactBootstrap.NavDropdown>\r\n          </ReactBootstrap.Nav>\r\n          <ReactBootstrap.Nav>\r\n            <div>\r\n              {auth().currentUser ?\r\n                  <div className=\"navbar-nav\">\r\n              <ReactBootstrap.Nav.Link href=\"/profile\">Profile</ReactBootstrap.Nav.Link>\r\n              <button className=\"btn btn-primary\" onClick={() => auth().signOut()}>Logout</button>\r\n                  </div>\r\n              :\r\n                  <div className=\"navbar-nav\">\r\n              <ReactBootstrap.Nav.Link href=\"/login\">Sign In</ReactBootstrap.Nav.Link>\r\n              <ReactBootstrap.Nav.Link href=\"/signup\">Sign Up</ReactBootstrap.Nav.Link>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </ReactBootstrap.Nav>\r\n        </ReactBootstrap.Navbar.Collapse>\r\n      </ReactBootstrap.Navbar>\r\n\r\n      {/*<nav className=\"navbar navbar-expand-lg navbar-light bg-dark\">*/}\r\n      {/*  <Link className=\"navbar-brand\" to=\"/\">ABC</Link>*/}\r\n      {/*  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">*/}\r\n      {/*    <span className=\"navbar-toggler-icon\"/>*/}\r\n      {/*  </button>*/}\r\n      {/*  <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNavAltMarkup\">*/}\r\n      {/*    {auth().currentUser*/}\r\n      {/*      ? <div className=\"navbar-nav\">*/}\r\n      {/*        <Link className=\"nav-item nav-link\" to=\"/profile\">Profile</Link>*/}\r\n      {/*        <button className=\"btn btn-primary\" onClick={() => auth().signOut()}>Logout</button>*/}\r\n      {/*      </div>*/}\r\n      {/*      : <div className=\"navbar-nav\">*/}\r\n      {/*        <Link className=\"nav-item nav-link\" to=\"/login\" eventKey={2}>Sign In</Link>*/}\r\n      {/*        <Link className=\"nav-item nav-link\" to=\"/signup\" eventKey={2}>Sign Up</Link>*/}\r\n      {/*      </div>}*/}\r\n      {/*  </div>*/}\r\n      {/*</nav>*/}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;",["141","142"],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\searchbox.js",["143","144"],"import React from \"react\";\r\nimport {MDBCol, MDBIcon} from \"mdbreact\";\r\nimport styles from \"./../App.css\"\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n\r\n        // <MDBCol md=\"6\">\r\n        //     <form action=\"\" onSubmit={props.handleSubmit}>\r\n        //       <div className=\"active-pink-3 active-pink-4 mb-4\">\r\n        //         <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={props.handleChange} />\r\n        //       </div>\r\n        //     </form>\r\n        // </MDBCol>\r\n        <MDBCol md=\"6\" className=\"search_container\">\r\n            <form className=\"form-inline mt-4 mb-4\" action=\"\" onSubmit={props.handleSubmit}>\r\n                <input className=\"search_input\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" onChange={props.handleChange} />\r\n            </form>\r\n        </MDBCol>\r\n\r\n        // <div className=\"container\">\r\n        //     <div className=\"row\">\r\n        //         <section className=\"col s4 offset-s4\">\r\n        //             <form action=\"\" onSubmit={props.handleSubmit}>\r\n        //                 <div className=\"input field\">\r\n        //                     <input placeholder=\"Search Movie\" type=\"text\" onChange={props.handleChange}/>\r\n        //                 </div>\r\n        //             </form>\r\n        //         </section>\r\n        //     </div>\r\n        //\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\movielist.js",["145","146","147","148"],"import React, {Component} from \"react\";\r\nimport {\r\n    Card, CardImg, CardDeck,\r\n} from 'react-bootstrap';\r\nimport styles from \"./../App.css\"\r\nimport Rating from \"./rating\";\r\nimport {Link} from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport {auth} from \"../services/firebase\";\r\nimport WatchLaterButton from \"./watchlaterbutton\";\r\n\r\n\r\nconst MovieList = (props) => {\r\n\r\n      function handleClick(id) {\r\n        console.log(id)\r\n        // docRef.where('name',\"==\", this.state.name).limit(1).get().then(snapshot => {\r\n        //     if (snapshot.empty) {\r\n        //         this.docRef.add({\r\n        //             name:id\r\n        //         })\r\n        //     }\r\n        // })\r\n\r\n        this.docRef.add({name:id})\r\n    }\r\n    return (\r\n        <div style={{marginTop: 20, marginBottom: 20, width: \"100%\",styles}}>\r\n        <div className=\"row\">\r\n        {props.movies.map((movie, index) => (\r\n            <CardDeck className = \"movie-card\">\r\n                <div>\r\n                    <Card className=\"center\">\r\n                        <CardImg className=\"image\" src={\"https://image.tmdb.org/t/p/w500/\"+movie.poster_path} alt='movie'/>\r\n                        <Card.Body className=\"details\">\r\n                            <Card.Title style={{fontSize:15}}>{movie.title}</Card.Title>\r\n                            <Card.Subtitle style={{fontSize:12}} className=\"mb-2 text-muted\">{movie.release_date}</Card.Subtitle>\r\n                            <Card.Text className=\"truncate\">{movie.overview}</Card.Text>\r\n                            <Rating name = {movie.id} />\r\n                            <Link to={{pathname:'/movie_details' ,state:{movie:movie.id}}}>View Details</Link>\r\n                            <WatchLaterButton movie={movie.id}/>\r\n                        </Card.Body>\r\n\r\n                    </Card>\r\n                </div>\r\n            </CardDeck>\r\n        ))}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MovieList;","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\movie.js",["149","150"],"import React from \"react\"\r\n\r\nconst Movie = (props) => {\r\n    return(\r\n        <div className = \"col s12 m6 l3\">\r\n            <div className = \"card\">\r\n                <div className =\"card-image waves-effect waves-block waves-light\">\r\n                    {\r\n                        props.image = null ?\r\n                            <img src={\"default image url\"}   alt = \"card image\" width = \"30\" height = \"360\" />\r\n\r\n                            :\r\n\r\n                            <img src={\"https://image.tmdb.org/t/p/w500/\"+props.image}   alt = \"card image\" width = \"50\" height = \"360\" />\r\n\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Movie;",["151","152"],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\carouselmovies.js",["153"],"import React from \"react\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport {Button, Card, CardDeck, CardImg} from \"react-bootstrap\";\r\nimport styles from \"./../App.css\"\r\nimport Rating from \"./rating\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst breakPoints = [\r\n  { width: 1, itemsToShow: 1 },\r\n  { width: 550, itemsToShow: 3, itemsToScroll: 3 },\r\n  { width: 768, itemsToShow: 5 },\r\n  { width: 1200, itemsToShow: 7 }\r\n];\r\n\r\nconst CarouselMovies = (props) => {\r\n\r\n    return(\r\n        <div className = \"row\" style={{width:\"100%\",styles}}>\r\n            <Carousel breakPoints={breakPoints} isRTL={false} className=\"rec-carousel-item\">\r\n                    {props.movies.map((movie, index) => (\r\n                        // <div style={{marginTop: 20, marginBottom: 20, width: \"100%\"}}>\r\n                        <CardDeck className = \"movie-card\">\r\n                        <div>\r\n                            <Card className=\"center\">\r\n                                <CardImg className=\"image\" src={\"https://image.tmdb.org/t/p/w500/\"+movie.poster_path} alt='movie'/>\r\n                                <Card.Body className=\"details\">\r\n                                    <Card.Title style={{fontSize:15}}>{movie.title}</Card.Title>\r\n                                    <Card.Subtitle style={{fontSize:12}} className=\"mb-2 text-muted\">{movie.release_date}</Card.Subtitle>\r\n                                    <Card.Text className=\"truncate\">{movie.overview}</Card.Text>\r\n                                    <Rating name = {movie.id} />\r\n                                    <Link to={{pathname:'/movie_details' ,state:{movie:movie.id}}}>View Details</Link>\r\n                                </Card.Body>\r\n\r\n                            </Card>\r\n\r\n                        </div>\r\n                        </CardDeck>\r\n                        // </div>\r\n                    ))}\r\n\r\n            </Carousel>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CarouselMovies;","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\components\\header.js",["154"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { auth } from '../services/firebase';\r\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/main\">Movie Recommender</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/main\">All Movies</Nav.Link>\r\n            <Nav.Link href=\"/recommendations\">Recommended Movies</Nav.Link>\r\n            <Nav.Link href=\"/watchlater\">Watch Later</Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              {/*<div className=\"row\">*/}\r\n              {/*  <div className=\"column left\">*/}\r\n                  <NavDropdown.Item href=\"/genres#Action\">Action</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"/genres#Animation\">Animation</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"/genres#Comedy\">Comedy</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"/genres#Crime\">Crime</NavDropdown.Item>\r\n                {/*</div>*/}\r\n                {/*<div className=\"column middle\">*/}\r\n                  <NavDropdown.Item href=\"/genres#Documentary\">Documentary</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"/genres#Family\">Family</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"/genres#History\">History</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"/genres#Horror\">Horror</NavDropdown.Item>\r\n                {/*</div>*/}\r\n                {/*<div className=\"column right\">*/}\r\n                  <NavDropdown.Item href=\"/genres#Mystery\">Mystery</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"/genres#Romance\">Romance</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"/genres#Science-Fiction\">Science Fiction</NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"/genres#Thriller\">Thriller</NavDropdown.Item>\r\n                {/*</div>*/}\r\n            {/*</div>*/}\r\n            </NavDropdown>\r\n              <NavDropdown.Divider />\r\n          </Nav>\r\n          <Nav>\r\n            <div>\r\n              {auth().currentUser ?\r\n                  <div className=\"navbar-nav\">\r\n                    <Nav.Link href=\"/profile\">Profile</Nav.Link>\r\n                    <button className=\"btn btn-primary\" onClick={() => auth().signOut()}>Logout</button>\r\n                  </div>\r\n                  :\r\n                  <div className=\"navbar-nav\">\r\n                    <Nav.Link href=\"/login\">Sign In</Nav.Link>\r\n                    <Nav.Link href=\"/signup\">Sign Up</Nav.Link>\r\n                  </div>\r\n              }\r\n            </div>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\rating.js",["155"],"import React, {Component} from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport firebase from \"firebase\";\r\nimport { auth } from \"../services/firebase\";\r\n\r\nexport default class SimpleRating extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state =\r\n        {\r\n            name: props.name,\r\n            uuid : auth().currentUser.uid,\r\n            rating:0\r\n\r\n\r\n        }\r\n        this.docRef =firebase.firestore().collection(\"Users\")\r\n                .doc(this.state.uuid).collection(\"Ratings\")\r\n\r\n\r\n    }\r\n\r\n\r\n    setValue(value){\r\n        this.setState({rating:value})\r\n    }\r\n\r\n\r\n    storeRating(newValue){\r\n        let today = new Date().toISOString().slice(0,10)\r\n        const rating : Rating = {\r\n            name: this.state.name,\r\n            rating: newValue\r\n        }\r\n\r\n        this.docRef.where('name',\"==\", this.state.name).limit(1).get().then(snapshot => {\r\n            if(snapshot.empty){\r\n                console.log(\"Nothing found\")\r\n                this.docRef.add(rating)\r\n            }else{\r\n                snapshot.docs[0].ref.update(rating)\r\n            }\r\n        })\r\n\r\n        let values =[this.state.uuid,this.state.name,newValue]\r\n        let bakendUrl = \"/backend\"\r\n        let backendAPIToken = \"Token \" + localStorage.getItem(\"token\")\r\n\r\n        fetch(bakendUrl + \"/suggestions\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-Type': 'application/json',\r\n                'Authorization': backendAPIToken\r\n            },\r\n            body: JSON.stringify({'values':values,'isUpdate':\"true\"})\r\n        })\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.docRef.where('name', \"==\", this.state.name).get().then(snapshot => {\r\n        if (snapshot.empty) {\r\n            this.setValue(0)\r\n        } else {\r\n            this.setValue(snapshot.docs[0].data().rating)\r\n        }\r\n    })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                <Rating\r\n                name={this.state.name}\r\n                value={this.state.rating}\r\n                onChange={(event, newValue) => {\r\n                    this.setValue(newValue)\r\n                    this.storeRating(newValue)\r\n                }}\r\n                />\r\n            </Box>\r\n        </div>\r\n    );\r\n    }\r\n\r\n}\r\n//\r\n// const SimpleRating = (props) => {\r\n//     //\r\n//     // let uuid = auth().currentUser.uid\r\n//     //         let docRef =firebase.firestore().collection(\"Users\")\r\n//     //             .doc(uuid).collection(\"Ratings\")\r\n//     // const [value, setValue] = React.useState('')\r\n//\r\n// //     const [userDetails, setUserDetails] = useState('')\r\n// //          db.collection('users').doc(id).get()\r\n// //         .then(snapshot => setUserDetails(snapshot.data()))\r\n// //    FOR VALUE ^^^\r\n//\r\n//     docRef.where('name', \"==\", props.name).get().then(snapshot => {\r\n//         if (snapshot.empty) {\r\n//             setValue(0)\r\n//         } else {\r\n//             setValue(snapshot.docs[0].data().rating)\r\n//         }\r\n//\r\n//\r\n//     function storeRating(newValue){\r\n//         const rating : Rating = {\r\n//             name: props.name,\r\n//             rating: newValue\r\n//         }\r\n//\r\n//         docRef.where('name',\"==\", props.name).limit(1).get().then(snapshot => {\r\n//             if(snapshot.empty){\r\n//                 // console.log(\"Nothing found\")\r\n//                 docRef.add(rating)\r\n//             }else{\r\n//                 snapshot.docs[0].ref.update(rating)\r\n//             }\r\n//         })\r\n//     }\r\n//\r\n//     return (\r\n//         <div>\r\n//             <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n//                 <Rating\r\n//                 name={props.name}\r\n//                 value={value}\r\n//                 onChange={(event, newValue) => {\r\n//                     setValue(newValue)\r\n//                     storeRating(newValue)\r\n//                 }}\r\n//                 />\r\n//             </Box>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default SimpleRating;","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\moviedetails.js",["156","157"],"import React, {Component} from \"react\";\r\nimport Header from \"../components/header\";\r\nimport Rating from \"./rating\";\r\nimport styles from \"./../App.css\"\r\nimport CarouselMovies from \"./carouselmovies\";\r\n\r\n\r\nexport default class MovieDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            movieInfo: [],\r\n            movieTrailer: '',\r\n            similarMovies:[]\r\n        }\r\n        this.movieID = props.location.state.movie;\r\n        this.apiKey = '0e4224cc4fec38376b7e3f8f073a68c6'\r\n    }\r\n\r\n    getMovieInformation() {\r\n        // console.log(\"search term: \" + this.state.searchTerm)\r\n        fetch('https://api.themoviedb.org/3/movie/' + this.movieID + '?api_key=' + this.apiKey + '&language=en-US')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                // console.log(data)\r\n                this.setState({isLoading: false, movieInfo: [response]})\r\n\r\n                // let movies = {movies:[...data.results]}\r\n                // return movies.movies;\r\n            })\r\n\r\n\r\n        fetch('https://api.themoviedb.org/3/movie/' + this.movieID + '/videos?api_key=' + this.apiKey + '&language=en-US')\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                let key = ''\r\n\r\n                let arr = [...data.results]\r\n                for (let i = 0; i < arr.length; i++) {\r\n\r\n                    if (arr[i].type === \"Trailer\") {\r\n                        key = arr[i].key\r\n                        break;\r\n                    }\r\n                }\r\n                this.setState({movieTrailer:\"https://www.youtube.com/embed/\"+key})\r\n\r\n            })\r\n\r\n        fetch('https://api.themoviedb.org/3/movie/'+this.movieID +'/similar?api_key=' + this.apiKey + '&language=en-US&page=1')\r\n            .then(data => data.json())\r\n            .then(data => {\r\n\r\n                this.setState({similarMovies:[...data.results]})\r\n\r\n            })\r\n    }\r\n\r\n    getBackgroundImage = (props) => {\r\n        return \"https://image.tmdb.org/t/p/w500/\" + props.name\r\n    }\r\n\r\n    getMovieGenres = (props) => {\r\n        let htmlResult = ''\r\n        for (let genre in props.genres){\r\n            htmlResult = htmlResult + ('<span className=\"tag\">' + genre.name + '</span>')\r\n        }\r\n        // document.getElementByClassName(\"demo\").innerHTML = htmlResult\r\n        return \"<p>hellooo</p>\"\r\n    }\r\n\r\n    // I changed this from will mount to did mount\r\n\r\n    componentWillMount() {\r\n\r\n        this.getMovieInformation()\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <div className=\"movie-card1\">\r\n                    {this.state.movieInfo.map((movie) => (\r\n                    <div className=\"container-movie-details\">\r\n\r\n                    <img src={\"https://image.tmdb.org/t/p/w500/\"+movie.poster_path}\r\n                                     alt=\"cover\" className=\"cover\"/>\r\n\r\n                        <div className=\"hero\" style={{backgroundImage: \"url(https://image.tmdb.org/t/p/w500/\"+ movie.backdrop_path + \")\"}}>\r\n\r\n                            <div className=\"details1\">\r\n\r\n                                <div className=\"title1\">{movie.title}  <span>{movie.release_date}</span></div>\r\n\r\n                                <div className=\"title2\">{movie.tagline}</div>\r\n\r\n                                <Rating name = {movie.id}/>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"description\">\r\n\r\n                            <div className=\"column1\">\r\n                                {/*{*/}\r\n                                {/*    movie.genres.forEach((genre) => {*/}\r\n                                {/*        <span className=\"tag\">Genre</span>*/}\r\n                                {/*        }*/}\r\n\r\n                                {/*    )*/}\r\n                                {/*}*/}\r\n                                <span className=\"tag\">Genre</span>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"column2\">\r\n\r\n                                <p>{movie.overview}</p>\r\n                                <div>\r\n                                    <span className = \"tag\">\r\n                                    {\r\n                                        this.getMovieGenres(movie.genres)\r\n                                    }\r\n                                    </span>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"column3\">\r\n\r\n                                <iframe width=\"420\" height=\"300\" src={this.state.movieTrailer}/>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <CarouselMovies movies={this.state.similarMovies}/>\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\recommendations.js",["158"],"import React, {Component} from \"react\";\r\nimport Header from \"../components/header\";\r\nimport MovieList from \"./movielist\";\r\nimport firebase from \"firebase\";\r\nimport {auth} from \"../services/firebase\";\r\n\r\nexport default class Recommendations extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            movies:[],\r\n            uuid : auth().currentUser.uid,\r\n            loading:true,\r\n            tmdbIds:[]\r\n        }\r\n        this.apiKey = '0e4224cc4fec38376b7e3f8f073a68c6'\r\n        this.docRef =firebase.firestore().collection(\"Users\")\r\n                .doc(this.state.uuid).collection(\"Ratings\")\r\n        // this.setTmdbIds()\r\n        // this.pickIds()\r\n\r\n    }\r\n\r\n    pickIds = (localtmdbIds) => {\r\n        console.log(\"PickIds\")\r\n        // if(this.state.tmdbIds.length < 10){\r\n        //     return this.state.tmdbIds\r\n        // }else if (this.state.tmdbIds.length > 10 && this.state.tmdbIds.length < 30 ){\r\n        //\r\n        //     return this.state.tmdbIds.slice(0, 10).map(function () {\r\n        //         return this.splice(Math.floor(Math.random() * this.state.tmdbIds.length), 1)[0];\r\n        //     }, this.state.tmdbIds.slice())\r\n        //\r\n        // }else{\r\n        //     return this.state.tmdbIds.slice(0, 20).map(function () {\r\n        //         return this.splice(Math.floor(Math.random() * this.state.tmdbIds.length), 1)[0];\r\n        //     }, this.state.tmdbIds.slice())\r\n        // }\r\n        if(localtmdbIds.length < 10){\r\n            return localtmdbIds\r\n        }else if (localtmdbIds.length > 10 && localtmdbIds.length < 30 ){\r\n\r\n            return localtmdbIds.slice(0, 10).map(function () {\r\n                return this.splice(Math.floor(Math.random() * localtmdbIds.length), 1)[0];\r\n            }, localtmdbIds.slice())\r\n\r\n        }else{\r\n            return localtmdbIds.slice(0, 20).map(function () {\r\n                return this.splice(Math.floor(Math.random() * localtmdbIds.length), 1)[0];\r\n            }, localtmdbIds.slice())\r\n        }\r\n\r\n    }\r\n\r\n    getRecommendations = (results) => {\r\n        // let results = this.pickIds()\r\n\r\n        console.log(\"getrecom\")\r\n        console.log(this.state.tmdbIds)\r\n        // let res = results\r\n        let variab = []\r\n        let bakendUrl = \"/backend\"\r\n        let backendAPIToken = \"Token \" + localStorage.getItem(\"token\")\r\n        console.log(backendAPIToken)\r\n\r\n        fetch(bakendUrl + \"/suggestions\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-Type': 'application/json',\r\n                'Authorization': backendAPIToken\r\n            },\r\n            //99861\r\n            body: JSON.stringify({'tmdbId':results,'isUpdate':\"false\"})\r\n        }).then(response => response.json())\r\n            .then(\r\n                json => {\r\n                    // console.log(results)\r\n                    this.setState(this.fetchSuggestions([...json.results]))\r\n                    console.log(...json.results)\r\n                    // console.log(\"ids: \"+this.state.tmdbIds)\r\n                }\r\n            )\r\n            .catch(err => console.error(err))\r\n\r\n        this.setState({loading: false})\r\n\r\n    }\r\n\r\n    fetchSuggestions = (results) => {\r\n        console.log(\"results: \")\r\n        console.log(results)\r\n        let recommendations = [];\r\n        const pushes = [];\r\n        for (let item in results){\r\n            const url = 'https://api.themoviedb.org/3/movie/' + results[item].tmdbId + '?api_key=' + this.apiKey + '&language=en-US'\r\n            pushes.push(\r\n                fetch(url).then(response => response.json())\r\n                    .then(json =>\r\n\r\n                        recommendations.push(json)\r\n\r\n                    )\r\n                    .catch(err => console.error(err))\r\n            )\r\n\r\n        }\r\n\r\n        let newrecommendations = []\r\n        Promise.all(pushes).then(()=>{\r\n            for (let item in recommendations){\r\n                if (!(\"success\" in recommendations[item])){\r\n                    newrecommendations.push(recommendations[item])\r\n                }\r\n            }\r\n            this.setState({movies:newrecommendations})\r\n        })\r\n        // return newrecommendations\r\n    }\r\n    async componentWillMount() {\r\n        let localtmdbIds = []\r\n        await this.docRef.where('rating', \"==\", 5).get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                console.log(\"1\")\r\n                console.log(doc.data().name)\r\n                console.log(typeof doc.data().name)\r\n                localtmdbIds.push(doc.data().name)\r\n            })\r\n\r\n\r\n        })\r\n\r\n        await this.docRef.where('rating', \"==\", 4).get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                console.log(\"2\")\r\n                console.log(doc.data().name)\r\n                localtmdbIds.push(doc.data().name)\r\n            })\r\n\r\n\r\n        })\r\n\r\n        let results = this.pickIds(localtmdbIds)\r\n        this.getRecommendations(results)\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                {/*{this.state.loading === true ? <h2>Generating your recommendations...</h2> :*/}\r\n                <MovieList movies={this.state.movies}/>\r\n                {/*}*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\settings.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\watchlaterbutton.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\watchlater.js",[],"C:\\Users\\nihar\\OneDrive\\Desktop\\movie-recommendation-system\\backend\\movie-recommendation-react\\src\\pages\\genres.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"159","replacedBy":"163"},{"ruleId":"161","replacedBy":"164"},{"ruleId":"159","replacedBy":"165"},{"ruleId":"161","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":2,"column":16,"nodeType":"169","messageId":"170","endLine":2,"endColumn":18},{"ruleId":"167","severity":1,"message":"171","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":13},{"ruleId":"167","severity":1,"message":"172","line":4,"column":9,"nodeType":"169","messageId":"170","endLine":4,"endColumn":15},{"ruleId":"173","severity":1,"message":"174","line":5,"column":64,"nodeType":"175","messageId":"176","endLine":5,"endColumn":65,"fix":"177"},{"ruleId":"167","severity":1,"message":"178","line":2,"column":9,"nodeType":"169","messageId":"170","endLine":2,"endColumn":13},{"ruleId":"167","severity":1,"message":"179","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":14},{"ruleId":"167","severity":1,"message":"180","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":14},{"ruleId":"159","replacedBy":"181"},{"ruleId":"161","replacedBy":"182"},{"ruleId":"167","severity":1,"message":"183","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":24},{"ruleId":"167","severity":1,"message":"179","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":14},{"ruleId":"167","severity":1,"message":"184","line":1,"column":16,"nodeType":"169","messageId":"170","endLine":1,"endColumn":25},{"ruleId":"167","severity":1,"message":"185","line":8,"column":8,"nodeType":"169","messageId":"170","endLine":8,"endColumn":16},{"ruleId":"167","severity":1,"message":"178","line":9,"column":9,"nodeType":"169","messageId":"170","endLine":9,"endColumn":13},{"ruleId":"167","severity":1,"message":"186","line":15,"column":16,"nodeType":"169","messageId":"170","endLine":15,"endColumn":27},{"ruleId":"187","severity":1,"message":"188","line":10,"column":29,"nodeType":"189","endLine":10,"endColumn":111},{"ruleId":"187","severity":1,"message":"188","line":14,"column":29,"nodeType":"189","endLine":14,"endColumn":138},{"ruleId":"159","replacedBy":"190"},{"ruleId":"161","replacedBy":"191"},{"ruleId":"167","severity":1,"message":"192","line":3,"column":9,"nodeType":"169","messageId":"170","endLine":3,"endColumn":15},{"ruleId":"167","severity":1,"message":"180","line":2,"column":10,"nodeType":"169","messageId":"170","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"193","line":31,"column":13,"nodeType":"169","messageId":"170","endLine":31,"endColumn":18},{"ruleId":"167","severity":1,"message":"179","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":14},{"ruleId":"194","severity":1,"message":"195","line":136,"column":33,"nodeType":"189","endLine":136,"endColumn":97},{"ruleId":"167","severity":1,"message":"196","line":62,"column":13,"nodeType":"169","messageId":"170","endLine":62,"endColumn":19},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],["197"],["198"],["197"],["198"],"no-unused-vars","'db' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'logout' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"199","text":"200"},"'auth' is defined but never used.","'styles' is defined but never used.","'Link' is defined but never used.",["197"],["198"],"'MDBIcon' is defined but never used.","'Component' is defined but never used.","'firebase' is defined but never used.","'handleClick' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["197"],["198"],"'Button' is defined but never used.","'today' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'variab' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[192,201],"\r\n      ."]